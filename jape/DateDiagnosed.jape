Phase: DateDiagnosed
Input: Lookup Person Lookup2 DateSince Sentence DiagnosisTriggers PointInTime Number

Options: control=appelt


Rule: DateDiagnosed1
Priority: 100

(   
	{Person}
	{Lookup2.majorType == historic}
	({Lookup2})?
    {DiagnosisTriggers.majorType == diagnosis}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient}):item
	{DateSince}

 
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = DateDiagnosed1, OnsetType = "Year_Diagnosed", 
PREF = :item.Lookup.PREF,  TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation,
YearDate = :match.DateSince.YearDate,
MonthDate = :match.DateSince.MonthDate,
DayDate = :match.DateSince.DayDate}

Rule: DateDiagnosed2
Priority: 100

(   
	{DiagnosisTriggers}
	{Lookup2.majorType == historic}
    {DiagnosisTriggers.majorType == diagnosis}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient}):item
	({Lookup2})?
	({Person})?
	{PointInTime}
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = DateDiagnosed2, OnsetType = "When_Diagnosed", 
PREF = :item.Lookup.PREF,  TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation,
PointInTime = :match.PointInTime.Since,
AgeUnit ="Year"}

Rule: DateDiagnosed3
Priority: 100

(   
	{Person}
	{Lookup2.majorType == historic}
	{PointInTime}
    {DiagnosisTriggers.majorType == diagnosis}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient}):item
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = DateDiagnosed3, OnsetType = "When_Diagnosed", 
PREF = :item.Lookup.PREF,  TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation,
PointInTime = :match.PointInTime.Since}

Rule: DateDiagnosed4
Priority: 100

(   
	{Person}
	{Lookup2.majorType == historic}
	({Lookup2})?
    {DiagnosisTriggers.majorType == diagnosis}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient}):item
	{DateSince}

 
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = DateDiagnosed4, OnsetType = "When_Diagnosed", 
PREF = :item.Lookup.PREF,  TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation,
YearDate = :match.DateSince.YearDate,
MonthDate = :match.DateSince.MonthDate,
DayDate = :match.DateSince.DayDate}

Rule: DateDiagnosed5
Priority: 100

(   
	({Person})?
	({Lookup2.majorType == historic})?
	({Lookup2})?
  ({DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type != seizureType})
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient}):item
	({Lookup2})?
	{DateSince}
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = DateDiagnosed5, OnsetType = "When_Diagnosed", 
PREF = :item.Lookup.PREF,  TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation,
YearDate = :match.DateSince.YearDate,
MonthDate = :match.DateSince.MonthDate,
DayDate = :match.DateSince.DayDate}


Rule: DateDiagnosed6
Priority: 90


(   
	({Person})?	
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient}):item
	({Lookup2})?
	({DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type != seizureType})
	({Lookup2})?
	{DateSince}
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = DateDiagnosed6, OnsetType = "When_Diagnosed", 
PREF = :item.Lookup.PREF,  TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation,
YearDate = :match.DateSince.YearDate,
MonthDate = :match.DateSince.MonthDate,
DayDate = :match.DateSince.DayDate}

