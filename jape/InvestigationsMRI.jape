Phase: Investigations
Input: Investigation p startList Mentions InvestigationFindingMRI Diagnosis ContextInvestigations Split Conj
Options: control=appelt

/* 
  * get MRI scans and their outcomes 
*/

Rule: IgnoreInvestigationsOutcomeMRI
Priority: 100
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed}):invest
  ({InvestigationFindingMRI})*
  (({InvestigationFindingMRI}):outcome)+
):match
-->
:match.InvestigationIgnore = { rule = IgnoreInvestigationsOutcome1MRI, MRI_Performed = "Yes", MRI_Results = :outcome.InvestigationFindingMRI.Results, 
CUI = :outcome.InvestigationFindingMRI.CUI, Negation = :outcome.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 99
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed}):invest
  ({InvestigationFindingMRI})*
  (({InvestigationFindingMRI}):outcome)+
):match
-->
:match.Investigations = { rule = getInvestigationsOutcome1MRI, MRI_Performed = "Yes", MRI_Results = :outcome.InvestigationFindingMRI.Results, 
CUI = :outcome.InvestigationFindingMRI.CUI, Negation = :outcome.InvestigationFindingMRI.Negation}

/* Removed the Investigation complete from Investigation gazetteer.
*Rule: getInvestigationsOutcomeMRI2
*Priority: 98
*(
*  ({Investigation.Complete == Yes, Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
*):match
*-->
*:match.Investigations = { rule = getInvestigationsOutcomeMRI2, MRI_Performed = "Yes", MRI_Results = :match.Investigation.Outcome, 
*CUI = :match.Investigation.CUI, Negation = :match.InvestigationFindingMRI.Negation}
*/

Rule: IgnoreInvestigationsOutcomeMRI3
Priority: 97
(
  ({ContextInvestigations})
  ({InvestigationFindingMRI})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
):match
-->
:match.InvestigationIgnore = { rule = IgnoreInvestigationsOutcomeMRI3, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI3
Priority: 96
(
  ({InvestigationFindingMRI})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
):match
-->
:match.Investigations = { rule = getInvestigationsOutcomeMRI3, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: InvestigationTwoSentences
Priority: 94
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Split})
  ({InvestigationFindingMRI})
):match
-->
:match.InvestigationIgnore = { rule = InvestigationTwoSentences, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: InvestigationTwoSentences
Priority: 94
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Split})
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations = { rule = InvestigationTwoSentences, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}



Rule: getInvestigationsOutcomeMRI
Priority: 93
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Conj})
  ({InvestigationFindingMRI})
):match
-->
:match.InvestigationIgnore = { rule = getInvestigationsOutcomeMRI4, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}

Rule: getInvestigationsOutcomeMRI
Priority: 93
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Conj})
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations = { rule = getInvestigationsOutcomeMRI4, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Conj})
  ({Split})
  ({InvestigationFindingMRI})
):match
-->
:match.InvestigationIgnore = { rule = getInvestigationsOutcomeMRI5, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Conj})
  ({Split})
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations = { rule = getInvestigationsOutcomeMRI5, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}



Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Split})
  ({Conj})
  ({InvestigationFindingMRI})
):match
-->
:match.InvestigationIgnore = { rule = getInvestigationsOutcomeMRI6, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Split})
  ({Conj})
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations = { rule = getInvestigationsOutcomeMRI6, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Investigation})*
  ({Conj})?
  ({Investigation})
  ({InvestigationFindingMRI})
):match
-->
:match.InvestigationIgnore= { rule = getInvestigationsOutcomeMRI7, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Investigation})*
  ({Conj})?
  ({Investigation})
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations= { rule = getInvestigationsOutcomeMRI7, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}


Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({ContextInvestigations})
  ({InvestigationFindingMRI})
  ({Investigation})*
  ({Conj})?
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
):match
-->
:match.InvestigationIgnore= { rule = getInvestigationsOutcomeMRI8, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}



Rule: getInvestigationsOutcomeMRI
Priority: 92
(
  ({InvestigationFindingMRI})
  ({Conj})?
  ({Investigation})*
  ({Conj})?
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
):match
-->
:match.Investigations= { rule = getInvestigationsOutcomeMRI8, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}

Rule: getInvestigationsOutcomeEEG
Priority: 92
(
  ({ContextInvestigations})
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Investigation})*
  ({Conj})?
  ({Investigation})
  ({Split})
  ({InvestigationFindingMRI})
):match
-->
:match.InvestigationIgnore= { rule = getInvestigationsOutcomeMRI9, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}

Rule: getInvestigationsOutcomeEEG
Priority: 92
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Investigation})*
  ({Conj})?
  ({Investigation})
  ({Split})
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations= { rule = getInvestigationsOutcomeMRI9, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}

Rule: getInvestigationsOutcomeEEG
Priority: 92
(
  ({Investigation.Investigation == MRI, Investigation.Experiencer == Patient, Investigation.Negation == Affirmed})
  ({Conj})?
  ({Investigation})
  (({Split})|({Conj}))?
  ({InvestigationFindingMRI})
):match
-->
:match.Investigations= { rule = getInvestigationsOutcomeMRI10, MRI_Performed = "Yes", MRI_Results = :match.InvestigationFindingMRI.Results, 
CUI = :match.InvestigationFindingMRI.CUI, Negation = :match.InvestigationFindingMRI.Negation}

