Phase: PatientHistD
Input: Lookup3 Lookup2 Person Number timePeriod Split OtherDiag TimeSince


/* These rules spill over more than one sentence,  annotate events in patient history - type of event with an UMLS CUI, age (precise and as a range), 
date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods) - RuleD2 overides the level of certainty of Lookup3*/


Options: control=appelt

Rule: PtHistoryD1
Priority: 100

(   
	({Person})?
	{Lookup2.type == past}
    {Lookup3}
	{Number}
	{timePeriod}
    {Split}
    {Lookup2.minorType == causality}
    ({Lookup3})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryD1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
AgeUnit =:match.timePeriod.time-unit,
Age =:match.Number.value}

Rule: PtHistoryD2
Priority: 100

(   
	
	{Lookup2.minorType == probability}
    {Lookup2.type == recent}
    ({Lookup3})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryD2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :match.Lookup2.Level}


//This one could be too broad, it also shifts probability directly from Lookup2.probability//

Rule: PtHistoryD3
Priority: 100

(   
	
	({Lookup2.minorType == probability}):a
	({Person})?
	{Lookup3.minorType == Disease}
    {Lookup2}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic, Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryD3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :a.Lookup2.Level}

Rule: PtHistoryD4  /*condition of interest then time of onset in the next sentence*/
Priority: 100

(   
	
	({OtherDiag}):item
	{Split}
	({Person})
	({Person})?
    {Lookup2.type == experiencing}
	{TimeSince}
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryD4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
LowerNumberOfTimePeriods = :match.TimeSince.LowerNumberOfTimePeriods,
UpperNumberOfTimePeriods = :match.TimeSince.UpperNumberOfTimePeriods}

