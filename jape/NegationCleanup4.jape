Imports: {import static gate.Utils.*; }

Phase: NegationCleanUp4
Input: Trigger Sentence Lookup2 Verbs Person Lookup3 
Options: control=all

// Why are we negating lookup2?
// Commit cbca3b - 21/04/2020
Rule: reverseNegation
(
{Trigger.majorType == negation}
({Verbs})[1,3]
({Lookup2.minorType == opinion}):umls
):match
-->
:umls{
umlsAnnots.iterator().next().getFeatures().put("Negation","Negated");
umlsAnnots.iterator().next().getFeatures().put("rule","putNegation");
},
:umls.LookupNegChange = {rule = putNegation}

Rule: reverseNegation2
(
({Person.type == possessive})
({Lookup3.minorType == generic, Lookup3.Negation == Negated}):umls
):match
-->
:umls{
umlsAnnots.iterator().next().getFeatures().put("Negation","Affirmed");
umlsAnnots.iterator().next().getFeatures().put("rule","reverseNegation2");
},
:umls.Lookup3NegChange = {rule = reverseNegation42_in_NegationCleanup4}

Rule: reverseNegation3
(
({Lookup2.majorType == negation, Lookup2.minorType == stop})
({Person.kind == firstName})
({Lookup3.majorType == umls, Lookup3.Negation == Negated}):umls
):match
-->
:umls{
umlsAnnots.iterator().next().getFeatures().put("Negation","Affirmed");
umlsAnnots.iterator().next().getFeatures().put("rule","reverseNegation3");
},
:umls.Lookup3NegChange = {rule = reverseNegation3_in_NegationCleanup4}
