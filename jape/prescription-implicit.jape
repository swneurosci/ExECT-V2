Phase: PrescriptionImplicitPrescription0
Input: Measurement DoseFrequency Medmod Split NP Prescription0 ContexPrescription Sentence Unit
Options: control=appelt

/*
 * SLaM JAPE file
*/

Rule: SecondDose
(
	({ContexPrescription})?
	({Prescription0}):p1
	({ContexPrescription})?
	({Measurement.dimension!=time}
	({ContexPrescription})?
	{DoseFrequency}):p2
):match
-->
:match.Prescription0 = { rule = "secondDose",
string = :p1.Prescription0.drug,
 DrugName = :p1.Prescription0.DrugName,
 CUI = :p1.Prescription0.CUI, 
 route = :p1.Prescription0.route,
 status = :p1.Prescription.status,
 DrugDose = :p2.Measurement.quantity,
 DoseUnit = :p2.Measurement.units,
 Frequency = :p2.DoseFrequency.frequency,
 time-unit = :p2.DoseFrequency.time-unit,
 dose-interval = :p2.DoseFrequency.interval,
 when = :p2.DoseFrequency.when,
 drug-type = :p1.Prescription0.drug-type,
 Contex = :p1.Prescription0.Contex}






/*
*Rule: WeanOff
*(
*	({Prescription}):p
*	({Medmod}|{Measurement})*
*):match
*-->
*:match.Prescription0 = { rule = "weanOff", drug = :p.Prescription.drug, route = :p.Prescription.route, status = "stop", dose = :p.Prescription.dose, dose-value = :p.Prescription.dose-value, dose-unit = :p.Prescription.dose-unit, dose-frequency = :p.Prescription.frequency, time-unit = :p.Prescription.time-unit, dose-interval = :p.Prescription.interval, when = :p.Prescription.when, drug-type = :p.Prescription.drug-type },
*{
*	Annotation prescription = bindings.get("p").iterator().next();
*	inputAS.remove(prescription);
*}
*/




/*
*This rule matched over such long spans that it really didn't help
*removing it boosted P from 0.82 to 0.86!
*Rule: SimpleChange
*Priority: 50
*(
*	{Medmod.kind == "prescription_change"}
*	{Drug}
*):match
*-->
*:match.Prescription = { rule = "simpleChange", drug = :match.Drug.name, status = :match.Medmod.minorType }
*/
