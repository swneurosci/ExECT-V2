Imports: {import static gate.Utils.*; }
Phase: Plurals
Input: Lookup
Options: control=brill
Rule:GetSingleSeizures
Priority: 100
(
{Lookup}
):tag
-->
:tag{
Long tokenStart = tagAnnots.firstNode().getOffset();
Long tokenEnd = tagAnnots.lastNode().getOffset();
// check the token is longer 3 characters i.e. don't call "is", "was" a plural
if(tokenEnd - tokenStart > 3) {
   try{
       String string = doc.getContent().getContent(tagAnnots.firstNode().getOffset(),
                    tagAnnots.lastNode().getOffset()).toString().toLowerCase();
      if(string.contains("seizure") && !string.contains("seizures")) {
       getOnlyAnn(tagAnnots).getFeatures().put("DiagCategory","SingleSeizure");
       }
   }
   catch(InvalidOffsetException e) {
    // not possible
    throw new LuckyException("Invalid offset from annotation");
   }
}
}

Rule:GetSingleSeizures
Priority: 100
(
{Lookup}
):tag
-->
:tag{
Long tokenStart = tagAnnots.firstNode().getOffset();
Long tokenEnd = tagAnnots.lastNode().getOffset();
// check the token is longer 3 characters i.e. don't call "is", "was" a plural
if(tokenEnd - tokenStart > 3) {
   try{
       String string = doc.getContent().getContent(tagAnnots.firstNode().getOffset(),
                    tagAnnots.lastNode().getOffset()).toString().toLowerCase();
      if(string.contains("convulsion") && !string.contains("convulsions")) {
       getOnlyAnn(tagAnnots).getFeatures().put("DiagCategory","SingleSeizure");
       }
   }
   catch(InvalidOffsetException e) {
    // not possible
    throw new LuckyException("Invalid offset from annotation");
   }
}
}