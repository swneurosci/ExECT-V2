Phase: Onset
Input: Lookup Person Lookup2 Sentence Age Pronouns

Options: control=appelt

 Rule: onsetAgeB2  //2nd type of seizure mentioned after the  age of onset was associeted with another seizure in OnsetAge//
Priority: 100

(   
	{Person}
	({Lookup})
	{Lookup2.language == onset}
	{Age}
	({Lookup2.language == experience})?
	({Lookup.minorType == Disease ,Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	
	
		
 ):match  
 -->
:item.Onset = {rule = onsetAgeB2, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
// PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
 

Rule: onsetAgeB4  /*2nd type of seizures with one age of onset in a sentence, 
This rule was abased on a sentence that needed experience reversal*/
Priority: 99

(   
	{Lookup2.language == onset}
	{Person}
	{Lookup}
	{Age}
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
):match   
 -->
:item.Onset = {rule = onsetAgeB4, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
// PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}	


/*As above: one age, second type of seizures*/

Rule: onsetAgeB5
Priority: 98

(  
	{Age}
	({Lookup2})
	{Person}
	({Lookup2})
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms, Lookup2.type != diagnosed}
	({Lookup.majorType == umls, Lookup.Negation == Affirmed,  Lookup.Experiencer == Patient, Lookup.minorType == Disease}):item
		
 ):match  
 -->
:item.Onset= {rule = onsetAgeB5, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
// PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}