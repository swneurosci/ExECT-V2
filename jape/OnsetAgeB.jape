Phase: Onset
Input: Lookup Person Lookup2 Sentence Age 

Options: control=appelt


Rule: onsetAgeB1
Priority: 100

(   
	{Person}
	({Lookup.minorType == Disease ,Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms , Lookup2.type == began}
	{Age}
		
 ):match  
 -->
:item.Onset = {rule = onsetAgeB1, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :match.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
 

 Rule: onsetAgeB2
Priority: 100

(   
	{Person}
	({Lookup.minorType == Disease ,Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	{Lookup2.language == onset}
	{Age}
		
 ):match  
 -->
:item.Onset = {rule = onsetAgeB2, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :match.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
 
 Rule: onsetAgeB3
Priority: 100

(   
	{Person}
	({Lookup.minorType == Disease ,Lookup.Experiencer == Patient , Lookup.Negation == Affirmed }):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms , Lookup2.type == began}
	{Age}
		
 ):match  
 -->
:item.Onset = {rule = onsetAgeB3, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :match.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAgeB4  /*2nd type of seizures with one age of onset in a sentence, 
This rule was abased on a sentence that needed experience reversal*/
Priority: 99

(   
	{Lookup2.language == onset}
	{Person}
	{Lookup}
	{Age}
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
):match   
 -->
:item.Onset = {rule = onsetAgeB4, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}	
