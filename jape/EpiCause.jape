Phase: EpiCause
Input: Lookup Lookup3 DiagnosisTriggers CausePhrase listPoint Sentence SeizureDescription
// Seizure description used as a block

  /*These rules are set to select causes and suspected causes of epilepsy, the UMLS CUI that is returned relates to the cause, 
  rather than a CUI associated with the type of epilepsy i.e.  if there is a CUI for a specific type of 
  symptomatic epilepsy (STY = Disease or syndrome) it would be annotated in Diagnosis.  Epilepsies
    with STY = "injury or poisoning" may have their own CUI and they would be annotated by Symptomatic*/

  

Options: control=appelt



Rule: Cause1
Priority: 100

(   
	{DiagnosisTriggers.majorType == diagnosis}
    ({listPoint})?
    ({Lookup3})?
    ({Lookup3})?
    ({listPoint})?
    {Lookup.majorType == umls , Lookup.minorType == Disease , Lookup.Experiencer == Patient}
	{CausePhrase}
    ({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
 ):match  
 -->
:item.EpilepsyCause = {rule = Cause1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: Cause3
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis}
    ({listPoint})?
    {Lookup.majorType == umls , Lookup.minorType == Disease , Lookup.Experiencer == Patient}
    {CausePhrase}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
    
 ):match  
 -->
:item.EpilepsyCause = {rule = Cause3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: Cause4
Priority: 99

(   
	
    
    {Lookup.majorType == umls , Lookup.minorType == Disease , Lookup.Experiencer == Patient}
    ({CausePhrase}) 
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
    
 ):match  
 -->
:item.EpilepsyCause = {rule = Cause4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: Cause5
Priority: 99

(   
	
    ({DiagnosisTriggers})
    {Lookup.majorType == umls , Lookup.minorType == Disease , Lookup.Experiencer == Patient}
    {CausePhrase}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
    
 ):match  
 -->
:item.EpilepsyCause = {rule = Cause5, PREF = :item.Lookup3.PREF, PREF = :item.Lookup2.PTRF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: Cause6
Priority: 99

(   
	
    ({CausePhrase})
    {Lookup.majorType == umls , Lookup.minorType == Disease , Lookup.Experiencer == Patient}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
    
 ):match  
 -->
:item.EpilepsyCause = {rule = Cause6, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: Cause7
Priority: 100

(   
	
    {Lookup.Negation == Affirmed}
    {CausePhrase}
    ({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
  


 ):match  
 -->
:item.EpilepsyCause = {rule = Cause7, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI,
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: Cause8
Priority: 100

(   
	
    {Lookup.Negation == Affirmed}
    {CausePhrase}
    ({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
    Lookup3.Experiencer == Patient, Lookup3.EC != No}):item
  


 ):match  
 -->
:item.EpilepsyCause = {rule = Cause8, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
//Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}