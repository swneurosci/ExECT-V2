Phase: PatientHistA
Input: OtherDiag Lookup2 PartialDate Lookup3 timeElapsed Numeric timePeriod Person Investigation  DateSince TimeSince Sentence   DiagnosisTriggers PointInTime Age Pronouns YearToMonths PHistBlock  Number MedicalHistory

/* These rules annotate events in patient history - type of event with an UMLS CUI, age (precise and as a range), 
date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods)
OtherDiag Lookup2 Lookup3 Person Investigation  DateSince TimeSince
 Sentence   DiagnosisTriggers PointInTime Age Pronouns YearToMonths 
 PHistBlock  Number MedicalHistory*/


Options: control=appelt


Rule: PtHistoryA1
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({OtherDiag.rule == OtherDiagAgeRange }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.OtherDiag.AgeUnit,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper = :match.OtherDiag.AgeUpper}

Rule: PtHistoryA1a
Priority: 100

(   
	({Person})
	({Lookup2.type == suffered})
	({OtherDiag.rule == DateSince}):item	

 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagA1a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate = :match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}


Rule: PtHistoryA2
Priority: 90

(   
	({Person})?
    ({Lookup2.majorType == historic ,Lookup2.language == onset, Lookup2.minorType != symptoms}|{Lookup2.language == onset, Lookup2.type == suffered})
	{DateSince}
	({Lookup2})
	({Lookup2})
	({OtherDiag }):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA2, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
YearDate = :match.DateSince.YearDate}

Rule: PtHistoryA3
Priority: 99

(   
	({Person})?
	({Lookup2.minorType ==  symptoms}|{Lookup2.majorType == historic})
	({Lookup2})?
	({OtherDiag.rule == OtherDiagAge}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA3, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
Age = :match.OtherDiag.Age,
AgeUnit = :match.OtherDiag.AgeUnit}

Rule: PtHistoryA3a   /*could be a bit sensitive as the AGE and the onset phrase in linked directly to the concept through OtherDiagAge */
Priority: 99

(   
	({Person})
	({Lookup2.minorType ==  symptoms}|{Lookup2.majorType == historic})?
	({Lookup2})?
	({OtherDiag.rule == OtherDiagAge}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA3a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
Age = :match.OtherDiag.Age,
AgeUnit = :match.OtherDiag.AgeUnit}

Rule: PtHistoryA4
Priority: 99

(   
	({Person})?
	({Lookup2.minorType ==  symptoms}|{Lookup2.majorType == historic})
	({OtherDiag.rule == OtherDiagYear}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
YearDate =:match.OtherDiag.YearDate}


Rule: PtHistoryA4a
Priority: 99

(   
	{Person}
    {Lookup2.majorType == historic}
	{TimeSince}
	{Lookup2}
	({Lookup2})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods =:match.TimeSince.value,
PointInTime = "" }


Rule: PtHistoryA5
Priority: 98

(   
	{DiagnosisTriggers.majorType == diagnosis}
	({Lookup2})*
	({Lookup3})?
	({OtherDiag}):item
    {TimeSince}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods =:match.TimeSince.value}

Rule: PtHistoryA6   /* episodes from childchood described to her as bank episodes - so we are after blank episodes*/
Priority: 100

(
	{Lookup2.minorType == time}
	{Lookup2.minorType == symptoms, Lookup2.type == experiencing}
	({Person})?
	({OtherDiag}):item
	 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA6, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.Lookup2.timeUnit,
AgeLower = :match.Lookup2.lowerAge,
AgeUpper = :match.Lookup2.upperAge} 


Rule: PtHistoryA7
Priority: 90

(   
	{Person}
	{Lookup2.minorType == symptoms , Lookup2.language == onset}
	({OtherDiag}):item
	({timeElapsed})
    ({Lookup2.minorType == date})
	({PointInTime})
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA7, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate =:match.Lookup2.month,
PointInTime = :match.PointInTime.Since}


Rule: PtHistoryA8
Priority: 90

(   
	{TimeSince}
	{Person}
	({Lookup2})?
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms , Lookup2.language == onset}
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
YearDate = "",
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods =:match.TimeSince.NumberOfTimePeriods}

/* When age is expressed as a time period e.g.teenage years - lookup2.mt=time, but is not
that close of the concept to use OtherDiagAgeRange ruke */
Rule: PtHistoryA8a
Priority: 100

(    
    {timeElapsed.time == during}
	({Lookup2.minorType == time}):a
    {Person}
    {Lookup2.language == onset}
	({OtherDiag}):item
   

):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
AgeUnit = :a.Lookup2.timeUnit,
AgeLower =:a.Lookup2.lowerAge,
AgeUpper =:a.Lookup2.upperAge} 

/*Rule: PtHistoryA8b
Priority: 90

(   
	({Person})?
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Temporality != hypothetical,Lookup3.Experiencer == Patient }):item
	({Lookup2})
	({timeElapsed.time == in})
	({PartialDate})
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8b, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty , 
MonthDate = :match.PartialDate.month,
YearDate = :match.PartialDate.year}*/

Rule: PtHistoryA9
Priority: 100

(   
	{Person}
	({Pronouns.type == relative})?
    {Lookup2.majorType == historic}
	({OtherDiag.rule == OtherDiagAgeRange}):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA9, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.OtherDiag.AgeUnit,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper = :match.OtherDiag.AgeUpper} 


 Rule: PtHistoryA10
Priority: 80

(   
	{Lookup2.minorType == probability}
	{Pronouns.type == demonstrative}
	({OtherDiag}):item   

):match  
 -->
:item.PatientHistory = {rule = PtHistoryA10, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty} 



Rule: PtHistoryA11
Priority: 90

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	({Numeric})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Temporality != hypothetical, Lookup3.Negation == Affirmed }):item
	{YearToMonths}
	({Numeric.rule == Numerals}):a
    {timePeriod}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA11, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = :match.YearToMonths.timePeriod,
AgeLower = :match.YearToMonths.value,
AgeUpper = :a.Numeric.value}


Rule: PtHistoryA12
Priority: 100

(   
	{Numeric}
	{Person}
    {Lookup2.type == past}
    ({Lookup2})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory12, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
YearDate = :match.Numeric.value}

Rule: PtHistoryA12b
Priority: 100

(   
	{Numeric}
	{Person}
    {Lookup2.type == past}
    ({Lookup2})?
	{Lookup3}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA12b, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = :match.Numeric.value}

Rule: PtHistoryA13a
Priority: 100

(   
	({Person})
	({Lookup2})
	({Lookup2.type == history})
	({OtherDiag}):item
  
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory13a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.OtherDiag.AgeUnit,
AgeUpper =:match.OtherDiag.AgeUpper}


Rule: PtHistoryA13
Priority: 100

(   
	{Person}
    {Lookup2.type == has}
    ({Lookup2.type == suffered})?
	({Lookup2})?
	({OtherDiag}):item
 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.OtherDiag.TimePeriod,
NumberOfTimePeriods = :match.OtherDiag.NumberOfTimePeriods}


Rule: PtHistoryA13b
Priority: 100

(   
	({PartialDate})
	({PointInTime})?
	{Person}
   ({Lookup2.language == onset, Lookup2.type == suffered})
   ({timeElapsed})?
	({Lookup2.type !=past})?
	({OtherDiag}):item
   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
PointInTime = :match.PointInTime.Since,
MonthDate =:match.PartialDate.month}


Rule: PtHistoryA14
Priority: 98

(   
	{Person}
    {Lookup2.type == treated}
	({OtherDiag}):item
    {Person}
    {Lookup3}
    {timeElapsed}
   {PartialDate}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA14, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate =:match.PartialDate.month,
YearDate =:match.PartialDate.year}


Rule: PtHistoryA15
Priority: 98

(   
	{MedicalHistory}
	({OtherDiag.rule == OtherDiagPhrase}):item
	({timeElapsed})
	{Numeric}
	({Numeric}):a
	   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA15, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
YearDate = :a.Numeric.value} 


Rule: PtHistoryA16
Priority: 100

(   
	({OtherDiag}):item
	{Person}
	{Lookup2.language == onset}
	{timeElapsed}
	{Numeric}
	{timePeriod}
	  
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA16, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods = :match.Numeric.value}

Rule: PtHistoryA17
Priority: 100

(   
	({!PHistBlock})
	({Person})
	{Lookup2.type == past}
	({OtherDiag.rule == OtherDiagAge}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA17, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit =:match.OtherDiag.AgeUnit,
Age =:match.OtherDiag.Age}

Rule: PtHistoryA19
Priority: 98

(   
	{Person}
	({Lookup2})?
	({timeElapsed})?
	({Lookup2.language == onset}|{Lookup2.minorType == causality})
	({Lookup2})?
	({OtherDiag}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA19, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.OtherDiag.TimePeriod,
NumberOfTimePeriods = :match.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA20   
Priority: 90

(  
	{Investigation.Investigation != EEG}
	({Lookup2})*
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA20, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty} 

Rule: PtHistoryA21
Priority: 98

(   
	{DiagnosisTriggers.majorType == diagnosis}
	{timeElapsed.time == since}
	{Numeric}
	({Person})
	({Lookup2.type == suffered}|{Lookup2.type == has})
	({OtherDiag}):item

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA21, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.timePeriod.time-unit,
YearDate =:match.Numeric.value}

Rule: PtHistoryA22 
Priority: 99

(   
	({Lookup2})?
	{Lookup2.minorType == opinion}
	({Lookup2})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA22, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

/*Rule: PtHistoryA23
Priority: 90

(  
 	{DiagnosisTriggers}	
	({Lookup2.minorType != causality})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Temporality != hypothetical, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA23, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}*/

Rule: PtHistoryA24  /*added time elapsed as "for" is used in some pgrases*/
Priority: 90

(  
 	({Person})
	 ({Pronouns.type == relative})?	
	({Lookup2.language == onset})
	({timeElapsed})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA24, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}
