Phase: PatientHistA
Input: OtherDiag Experience Conj CausePhrase TimeSince Person DateSince Investigation Split PartialDate NewLine Sentence DiagnosisTriggers PointInTime Age Pronouns  MedicalHistory listPoint 

//Lookup3 was used as a block but I took it out
/*These are expected to pick up the 1st of OtherDiag shown in a sentence, deriving age/timesince/datesince from OtherDiag 
itself or from the sentence itself if they are too far*/

Options: control=appelt


Rule: PtHistoryA1  /* To capture otherdiagnosis which is combined with age or age range in OtherDiag */
Priority: 100

(   
	({Person})?
  	({Experience})
	({Person})
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit = :item.OtherDiag.AgeUnit,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper = :item.OtherDiag.AgeUpper,
Age = :item.OtherDiag.Age}

Rule: PtHistoryA2  /* To capture otherdiagnosis which is combined with Date or TimeSince in OtherDiag */
//she had a stroke 10 years ago  /  he had a stroke in 2017

Priority: 100
(   
	({Person})
	({Experience})
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA2, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit =:item.OtherDiag.AgeUnit,
Age =:item.OtherDiag.Age,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper,
DayDate =:item.OtherDiag.MonthDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate = :item.OtherDiag.YearDate,
PointInTime = :item.OtherDiag.PointInTime,
TimePeriod = :item.OtherDiag.TimePeriod,
LowerNumberOfTimePeriods = :match.OtherDiag.LowerNumberOfTimePeriods,
UpperNumberOfTimePeriods =:match.OtherDiag.UpperNumberOfTimePeriods,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA3  /* To capture otherdiagnosis which is given before another OtherDiagnosis combined with Age, TimeSince, date  in OtherDiag*/ 
//she had a stroke with hemiparesis in 2017
Priority: 100
	
(  
	({DiagnosisTriggers.type == diagnosis})
	({OtherDiag}):item
	({Conj.type == "with"}|{Conj.type == "conj"})
	({OtherDiag}):a
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA3, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit = :a.OtherDiag.AgeUnit,
AgeLower = :a.OtherDiag.AgeLower,
AgeUpper = :a.OtherDiag.AgeUpper,
Age = :a.OtherDiag.Age,
DayDate =:a.OtherDiag.MonthDate,
MonthDate = :a.OtherDiag.MonthDate,
YearDate = :a.OtherDiag.YearDate,
PointInTime = :a.OtherDiag.PointInTime,
TimePeriod = :a.OtherDiag.TimePeriod,
LowerNumberOfTimePeriods = :a.OtherDiag.LowerNumberOfTimePeriods,
UpperNumberOfTimePeriods =:a.OtherDiag.UpperNumberOfTimePeriods,
NumberOfTimePeriods = :a.OtherDiag.NumberOfTimePeriods}


/*covers OtherDiag with TimeSince  or age but also the simple phrases: he has OtherDiag, Last year she had her first seizure */
Rule: PtHistoryA4  

Priority: 100

(   
	
	({Person})
	({OtherDiag}):item
 
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods,
AgeUnit = :item.OtherDiag.AgeUnit,
Age =:item.OtherDiag.Age,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper,
DayDate =:item.OtherDiag.DayDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate,
PointInTime = :item.OtherDiag.PointInTime}

Rule: PtHistoryA5  // MRI in 2010 showed gliosis - we do not want the date as this relates to the scan not to gliosis
Priority: 99

(   
	({Investigation})
    {DateSince}
	({OtherDiag}):item	
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA5, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,  Negation = :item.OtherDiag.Negation}

Rule: PtHistoryA6 /*person  (who) onset OtherDiag from age of*/
Priority: 99
	
(   
	({Pronouns})
	({OtherDiag}):item	
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA6, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
Age = :item.OtherDiag.Age,
AgeUnit = :item.OtherDiag.AgeUnit,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper = :item.OtherDiag.AgeUpper,
DayDate =:item.DateSince.DayDate,
MonthDate = :item.DateSince.MonthDate,
YearDate =:item.DateSince.YearDate,
PointInTime = :item.OtherDiag.PointInTime}

/*could be a bit sensitive as the AGE and the onset phrase in linked directly to the 
concept through OtherDiagAge : Her seizures started at the age of 2 or 3 */
Rule: PtHistoryA7  
Priority: 99

(   
	({Person})
	({OtherDiag}):item	
	({DateSince})?
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA7, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
Age = :item.OtherDiag.Age,
AgeUnit = :item.OtherDiag.AgeUnit,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper = :item.OtherDiag.AgeUpper,
DayDate =:match.DateSince.DayDate,
MonthDate = :match.DateSince.MonthDate,
YearDate =:match.DateSince.YearDate}

Rule: PtHistoryA8  /*he has had these episodes  Date / time since */
Priority: 100
(   
	({Person})
	({Pronouns})?
	({OtherDiag}):item	
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA8, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
DayDate =:item.OtherDiag.MonthDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA9  /* top of letter diagnosis*/
Priority: 100

(   
	({DiagnosisTriggers.type == diagnosis})
	({OtherDiag}):item	
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA9, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA10  /*With otherDiag timesince when Onset is within OtherDiag phrase*/
Priority: 100

(   
	({Person.type == possessive})
	({OtherDiag}):item	
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA10, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
DayDate = :item.OtherDiag.DayDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate = :item.OtherDiag.YearDate,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}


Rule: PtHistoryA11
Priority: 99
 (
	{Person}
	{TimeSince}
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA11, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods =:match.TimeSince.value,
PointInTime = "" }


Rule: PtHistoryA12   /* episodes from childchood described to her as bank episodes - so we are after blank episodes*/
Priority: 100

(
	{Age}
	({Person})?
	({OtherDiag}):item
	 
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA12, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit = :match.Age.AgeUnit,
Age = :item.OtherDiag.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper} 


Rule: PtHistoryA13  // when Date is expressed with Point in Time e.g. May last year or just as since birth//
Priority: 90
(   
	{Person}
	({OtherDiag}):item
	({PointInTime})
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA13, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
MonthDate =:match.Lookup2.month,
PointInTime = :match.PointInTime.Since}

Rule: PtHistoryA14  // when Date is expressed with Point in Time e.g. May last year or just as since birth//
Priority: 90
(   
	{PartialDate}
	({PointInTime})
	{Person}
	({OtherDiag}):item
	
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA14, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
MonthDate =:match.PartialDate.month,
PointInTime = :match.PointInTime.Since}

Rule: PtHistoryA15  // As in : History is consistent with  epilepsy secondary to a stroke//
Priority: 90

(   
	({DiagnosisTriggers.Type == diagnosis})
	({Experience})?
	({OtherDiag}):item
	
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA15, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
PointInTime = :match.PointInTime.Since}

/*time since is too far to be a part of OtherDiag - "history x yeaes of Person  experiencing seizures"*/
Rule: PtHistoryA15a 
Priority: 99

(  
	({!listPoint})
	({!OtherDiag})
	{TimeSince}
	{Person}
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA15a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
YearDate = "",
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods =:match.TimeSince.NumberOfTimePeriods}

/* When age is expressed as a time period e.g.teenage years - lookup2.mt=time, but is not
that close to the concept to use OtherDiagAgeRange ruke */
Rule: PtHistoryA15b
Priority: 100//({Lookup2.language == onset}|{Lookup2.language == experience})

(    
	({Age})
    {Person}
	({OtherDiag}):item

):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA15b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
AgeUnit = :match.Age.AgeUnit,
Age = :item.OtherDiag.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper} 

Rule: PtHistoryA15c   /*when history is of an episodes that started on X date  but too far to be captured by OtherDiag with partial date */
// (he) sufferes head injury as a result of his RTA in 2012
Priority: 90 

(   ({Person})?
	({Experience})
	({OtherDiag}):item
	({CausePhrase})
	({Person})?
	({OtherDiag})
	({DateSince}):a
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA15c, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation, 
YearDate = :match.DateSince.YearDate,
DayDate =:a.DateSince.DayDate,
MonthDate = :a.DateSince.MonthDate,
YearDate =:a.DateSince.YearDate}

/*Lady who had Lookup3 (such as normal birth)and had OtherDiag  with age range*/
Rule: PtHistoryA16
Priority: 100 

(   
	{Person}
	({Pronouns.type == relative})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA16, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit = :match.OtherDiag.AgeUnit,
Age = :item.OtherDiag.Age,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper = :match.OtherDiag.AgeUpper}


 Rule: PtHistoryA17  /*as in ...difficult to say whether these are / he is having are non-epileptic seizures*/
Priority: 80

(   
	({Pronouns.type == demonstrative})
	({Person})?
	({OtherDiag}):item   

):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA17, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Negation = :item.OtherDiag.Negation,
Certainty = :item.OtherDiag.Certainty} 


Rule: PtHistoryA18
Priority: 100

(   
	{Person}
	({OtherDiag}):item
	({Person})
	{Age}

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA18, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper}


Rule: PtHistoryA19
Priority: 100 

(   
	{DateSince}
	{Person}
	({OtherDiag}):item
	({Person})?
    
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA19, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
YearDate = :match.DateSince.YearDate}

Rule: PtHistoryA20
Priority: 100
(   
	({Person})?
	({TimeSince}
	{Person} 
	{OtherDiag}):item	

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistory20, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
TimePeriod = :item.TimeSince.TimePeriod,
NumberOfTimePeriods = :item.TimeSince.NumberOfTimePeriods}





/*As above but picks up specific type Otherdiag with built in 'onset time since'  as no separate onset phrase 
His seizures started 4 years ago*/
Rule: PtHistoryA22  
Priority: 100

	(
	({OtherDiag}):item
    ({Experience.type == experiencing} | {Experience.type == continuing})
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA22, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit =:item.OtherDiag.AgeUnit,
Age =:item.OtherDiag.Age,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper,
DayDate =:item.OtherDiag.DayDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods =:match.TimeSince.NumberOfTimePeriods}

Rule: PtHistoryA23
Priority: 100

(   
	({DateSince})
	({PointInTime})?
	{Person}
	({OtherDiag}):item
   
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA23, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
PointInTime = :match.PointInTime.Since,
MonthDate = :match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}


Rule: PtHistoryA24
Priority: 98
(   
	{Person}
	({OtherDiag}):item
    {Person}
   	{DateSince}

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA24, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
DayDate =:item.DateSince.DayDate,
MonthDate =:match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}

Rule: PtHistoryA25 
Priority: 90
(   

    
	({OtherDiag}):item
    {Person}
	({Person})?
	({OtherDiag})?
   	{DateSince}

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA25, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
DayDate =:match.DateSince.DayDate,
MonthDate =:match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}

//  As in previous MI in 2015 -(chacked May24) 
Rule: PtHistoryA26
Priority: 98

(   
	{Experience.type == history}
	({OtherDiag}):item
	
	   
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA26, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit =:item.OtherDiag.AgeUnit,
Age =:item.OtherDiag.Age,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper,
DayDate =:item.OtherDiag.DayDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods =:match.TimeSince.NumberOfTimePeriods} 


Rule: PtHistoryA27
Priority: 100

(   
	({OtherDiag}):item
	{Person}
	{TimeSince}
	  
 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA27, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}


Rule: PtHistoryA28  // These seizures, those attacks etc. 
	
Priority: 100
(   
	({Pronouns.type == demonstrative})
	({OtherDiag}):item
	

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA28, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit =:item.OtherDiag.AgeUnit,
Age =:item.OtherDiag.Age,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper,
DayDate =:item.OtherDiag.DayDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods =:match.TimeSince.NumberOfTimePeriods}

Rule: PtHistoryA29 
Priority: 100
(   
	({Experience})
	({OtherDiag}):item
	({Person})
	

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA29, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit =:item.OtherDiag.AgeUnit,
Age =:item.OtherDiag.Age,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper}



Rule: PtHistoryA30
Priority: 98
	

(  
	({!Person})
	({Person})
	({Age})
	({OtherDiag}):item
	

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA30, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
Negation = :item.OtherDiag.Negation,
TimePeriod = :match.OtherDiag.TimePeriod,
NumberOfTimePeriods = :match.OtherDiag.NumberOfTimePeriods,
AgeUnit =:match.Age.AgeUnit,
Age =:match.Age.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUppe}


Rule: PtHistoryA31  /* girl who has had seizures   or  His seizures   with age, time. date if within Otherdiag */
Priority: 80

(  
 	({Person})
	({Pronouns.type == relative})?
	({Experience})?
	({OtherDiag}):item
	

 ):match  
 -->
:item.PatientHistoryA = {rule = PtHistoryA31, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
EC = :item.OtherDiag.EC,  
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
MonthDate =:item.OtherDiag.MonthDate,
YearDate = :item.OtherDiag.YearDate,
TimePeriod = :match.OtherDiag.TimePeriod,
NumberOfTimePeriods = :match.OtherDiag.NumberOfTimePeriods,
AgeUnit =:match.Age.AgeUnit,
Age =:match.Age.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUppe}






