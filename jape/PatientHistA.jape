Phase: PatientHistA
Input: Lookup3 Lookup2 Person Numeric Sentence timeElapsed timePeriod DiagnosisTriggers PointInTime Age YearToMonths

/* These rules annotate events in patient history - type of event with an UMLS CUI, age (precise and as a range), 
date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods) */


Options: control=appelt


Rule: PtHistory1
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{Numeric}
	{timeElapsed.time == in}
	{Person}
	{Lookup2.minorType == time}
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value,
MonthDate = "",
Age = "",
AgeUnit = :match.Lookup2.timeUnit,
AgeLower =:match.Lookup2.lowerAge,
AgeUpper =:match.Lookup2.upperAge,
/*TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""*/}


Rule: PtHistory2
Priority: 90

(   
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType != symptoms}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{timeElapsed.time == in}
	{timePeriod}
	{Numeric}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty , 
YearDate = :match.Numeric.value
/*MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""*/ }



Rule: PtHistory3
Priority: 99

(   
	{Person.minorType == pronoun}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item

    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
/*YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = "" */}

Rule: PtHistory4
Priority: 99

(   
	{Person}
    {Lookup2.majorType == historic}
	({Numeric})
	({Lookup2})
	({Lookup2})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value,
PointInTime = "" }


Rule: PtHistory5
Priority: 98

(   
	{DiagnosisTriggers.majorType == diagnosis}
	({Lookup2})*
	({Lookup3})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
    {Numeric}
	{timePeriod}
	{timeElapsed}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistory5, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value,
/*PointInTime = "",
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = ""*/}


Rule: PtHistory6   
Priority: 100

(  
	{Person}
	{Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{timeElapsed}
	{Person}
	{Lookup2.type == past}
	{Numeric}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory6, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = :match.Numeric.value,
AgeUnit = "Year",
/*AgeLower ="",
AgeUpper ="",
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""*/} 


Rule: PtHistory7
Priority: 90

(   
	{Person}
	{Lookup2.minorType == symptoms , Lookup2.language == onset}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
    

 ):match  
 -->
:item.PatientHistory = {rule = PtHistory7, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
/*YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod = "",
NumberOfTimePeriods ="",
PointInTime = ""*/ }


Rule: PtHistory8
Priority: 90

(   {Numeric}
	{timePeriod}
	{timeElapsed.time == since}
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms , Lookup2.language == onset}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistory8, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, YearDate = "",
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value,
/*PointInTime = "" ,
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = ""*/}


Rule: PtHistory9
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{Lookup2.minorType == time}
    

 ):match  
 -->
:item.PatientHistory = {rule = PtHistory9, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty , 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = :match.Lookup2.timeUnit,
AgeLower = :match.Lookup2.lowerAge,
AgeUpper = :match.Lookup2.upperAge,
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""} 


 Rule: PtHistory10
Priority: 80

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{Person.majorType != person}
    

 ):match  
 -->
:item.PatientHistory = {rule = PtHistory10, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
/*YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod = "",
NumberOfTimePeriods ="",
PointInTime = ""*/}


Rule: PtHistory11
Priority: 90

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	({Numeric})?
	({Lookup3.minorType == Disease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{YearToMonths}
	({Numeric.rule == Numerals}):a
    {timePeriod}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistory11, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = :match.YearToMonths.timePeriod,
AgeLower = :match.YearToMonths.value,
AgeUpper = :a.Numeric.value
/*TimePeriod = "",
NumberOfTimePeriods ="",
PointInTime = ""*/}



