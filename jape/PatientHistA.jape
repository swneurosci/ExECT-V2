Phase: PatientHistA
Input: OtherDiag Lookup2 TimeSince Person DateSince PHistBlock Investigation PartialDate Split NewLine Sentence DiagnosisTriggers PointInTime Age Pronouns  MedicalHistory listPoint 

//Lookup3 was used as a block but I took it out
/*These are expected to pick up the 1st of OtherDiag shown in a sentence, deriving age/timesince/datesince from OtherDiag 
itself or from the sentence itself if they are too far*/

Options: control=appelt


Rule: PtHistoryA1  /* To capture otherdiagnosis which is combined with age or range in OtherDiag */
Priority: 100

(   
	({Person})?
  	({Lookup2.language == experience}|{Lookup2.majorType == diagnosis})
	({Person})
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :item.OtherDiag.AgeUnit,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper = :item.OtherDiag.AgeUpper,
Age = :item.OtherDiag.Age}

Rule: PtHistoryA1a  /* To capture otherdiagnosis which is combined with Date in OtherDiag */
Priority: 100
 
(   
	({Person})?
  	({Lookup2.language == onset})
	({Lookup2})?
	({OtherDiag.rule == OtherDiagDate}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
DayDate =:item.OtherDiag.MonthDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate = :item.OtherDiag.YearDate}

Rule: PtHistoryA1b  /* To capture otherdiagnosis which is combined with TimeSince  in OtherDiag*/
Priority: 100

(  
	({Person})
  	({Lookup2.language == onset}|{Lookup2.language == experience})
	({Lookup2})?
	({OtherDiag.rule == OtherDiagTime}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
TimePeriod = :item.OtherDiag.TimePeriod,
LowerNumberOfTimePeriods = :match.OtherDiag.LowerNumberOfTimePeriods,
UpperNumberOfTimePeriods =:match.OtherDiag.UpperNumberOfTimePeriods,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}


/*other diagnosis with Date combined in OtherDiag 'he sufferd a strake in 2010' without Person 
this could be too general but Person was made optional as for some reason GATE wasn't picking up 'He' in the text
altho some other optional Lookup and Perosn*/

Rule: PtHistoryA1c  

Priority: 100

(   
	({Person})?
	({Lookup2.language == onset}|{Lookup2.language == experience})
	({Lookup2})?
	({Person})?
	({OtherDiag.rule == OtherDiagDate}):item	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1c, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
DayDate =:item.OtherDiag.MonthDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate = :item.OtherDiag.YearDate}

Rule: PtHistoryA2
Priority: 99

(   
	({Person})?
    ({Lookup2.majorType == historic ,Lookup2.minorType != symptoms}|{Lookup2.type == suffered})
	{DateSince}
	({Lookup2})
	({Lookup2})
	({OtherDiag }):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA2, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
YearDate = :match.DateSince.YearDate}

Rule: PtHistoryA3 /*person  (who) onset OtherDiag from age of*/
Priority: 99

(   
	({Person})?
	({Pronouns})?
	({Lookup2.language == onset}|{Lookup2.language == experience})
	({Lookup2})?
	({OtherDiag.rule == OtherDiagAge}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA3, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
Age = :item.OtherDiag.Age,
AgeUnit = :item.OtherDiag.AgeUnit,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper = :item.OtherDiag.AgeUpper}

/*could be a bit sensitive as the AGE and the onset phrase in linked directly to the 
concept through OtherDiagAge : Her seizures started at the age of 2 or 3 */
Rule: PtHistoryA3a   
Priority: 99

(   
	({Person})
	({Lookup2.majorType == historic})?
	({Lookup2})?
	({OtherDiag.rule == OtherDiagAge}):item	
	({DateSince})?
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA3a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
Age = :item.OtherDiag.Age,
AgeUnit = :item.OtherDiag.AgeUnit,
AgeLower = :item.OtherDiag.AgeLower,
AgeUpper = :item.OtherDiag.AgeUpper,
DayDate =:match.DateSince.DayDate,
MonthDate = :match.DateSince.MonthDate,
YearDate =:match.DateSince.YearDate}

Rule: PtHistoryA4  /*With otherDiag Date when Person may not be picked up and without a clear onset phrase*/
Priority: 100

(   
	({Person})
	({Lookup2.majorType == historic})
	({OtherDiag.rule == OtherDiagDate}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
DayDate =:item.OtherDiag.MonthDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate}

Rule: PtHistoryA4a  /**/
Priority: 100

(   
	({Person})
	({Pronouns})?
	({Lookup2})
	({Lookup2})
	({OtherDiag.rule == OtherDiagTime}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA4ab  /*With otherDiag timesince when Onset is within OtherDiag phrase*/
Priority: 100

(   
	({Person.type == possessive})
	({OtherDiag.rule == OtherDiagDate}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4ab, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
DayDate =:item.OtherDiag.DayDate,
MonthDate = :item.OtherDiag.MonthDate,
YearDate =:item.OtherDiag.YearDate}


Rule: PtHistoryA4ab  /*With otherDiag timesince when Onset is within OtherDiag phrase*/
Priority: 100

(   
	({Person.type == possessive})
	({OtherDiag.rule == OtherDiagTime}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4ab, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA4b
Priority: 99

(   
	{Person}
    {Lookup2.majorType == historic}
	{TimeSince}
	{Lookup2}
	({Lookup2})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods =:match.TimeSince.value,
PointInTime = "" }


Rule: PtHistoryA5   /* episodes from childchood described to her as bank episodes - so we are after blank episodes*/
Priority: 100

(
	{Age}
	({Lookup2.language == onset}|{Lookup2.language == experience})
	({Person})?
	({OtherDiag}):item
	 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA5, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.Age.AgeUnit,
Age = :item.OtherDiag.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper} 


Rule: PtHistoryA6  // when Date is expressed with Point in Time e.g. May last year or just as since birth//
Priority: 90

(   
	{Person}
	{Lookup2.minorType == symptoms}
	({OtherDiag}):item
    ({Lookup2.minorType == date})
	({PointInTime})
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA6, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate =:match.Lookup2.month,
PointInTime = :match.PointInTime.Since}

Rule: PtHistoryA7a  // when Date is expressed with Point in Time e.g. May last year or just as since birth//
Priority: 90

(   
	{PartialDate}
	({PointInTime})
	{Person}
	{Lookup2.majorType == historic}
	({OtherDiag}):item
	
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA7a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate =:match.PartialDate.month,
PointInTime = :match.PointInTime.Since}

Rule: PtHistoryA7b  // when Date is expressed with Point in Time e.g.  since birth//
Priority: 90

(   
	({Person})
	{Lookup2}
	({OtherDiag}):item
	{PointInTime}
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA7b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
PointInTime = :match.PointInTime.Since}

/*time since is too far to be a part of OtherDiag - "history x yeaes of Person  experiencing seizures"*/
Rule: PtHistoryA8  
Priority: 99

(   
	({!listPoint})
	({!OtherDiag})
	{TimeSince}
	{Person}
	({Lookup2})?
    ({Lookup2.majorType == historic , Lookup2.minorType == symptoms , Lookup2.language == onset}|{Lookup2.language == experience, Lookup2.type == experiencing})
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
YearDate = "",
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods =:match.TimeSince.NumberOfTimePeriods}

/* When age is expressed as a time period e.g.teenage years - lookup2.mt=time, but is not
that close to the concept to use OtherDiagAgeRange ruke */
Rule: PtHistoryA8a
Priority: 100

(    
	({Age})
    {Person}
    ({Lookup2.language == onset}|{Lookup2.language == experience})
	({OtherDiag}):item
   

):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age = :item.OtherDiag.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper} 

Rule: PtHistoryA8b   /*when history is of episodes that started on X date  but too far to be captured by OtherDiag with partial date */
Priority: 90

(   
	({Person})?
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	({OtherDiag}):item
	{DateSince}
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
YearDate = :match.DateSince.YearDate}

/*Lady who had Lookup3 (such as normal birth)and had OtherDiag  with age range*/
Rule: PtHistoryA9
Priority: 100

(   
	{Person}
	({Pronouns.type == relative})?
    {Lookup2.majorType == historic}
	({Lookup2.majorType == historic})?
	({OtherDiag.rule == OtherDiagAge}):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA9, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.OtherDiag.AgeUnit,
Age = :item.OtherDiag.Age,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper = :match.OtherDiag.AgeUpper}


 Rule: PtHistoryA10  /*as in ...difficult to say whether these are / he is having are non-epileptic seizures*/
Priority: 80

(   
	
	{Lookup2.minorType == probability}
	({Pronouns.type == demonstrative})
	({Person})?
	({OtherDiag}):item   

):match  
 -->
:item.PatientHistory = {rule = PtHistoryA10, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty} 


Rule: PtHistoryA11
Priority: 100

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	({OtherDiag}):item
	({Person})
	({Lookup2})
	{Age}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA11, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper}


Rule: PtHistoryA12
Priority: 100

(   
	({Lookup2})
	{DateSince}
	{Person}
    ({Lookup2.language == experience})
    ({Lookup2})?
	({OtherDiag}):item
	({Person})?
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA12, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
YearDate = :match.DateSince.YearDate}

Rule: PtHistoryA12b
Priority: 100

(   
	({Person})?
	({TimeSince}
	{Person}
    ({Lookup2.majorType == historic})?
    ({Lookup2.language == experience}|{Lookup2.language == onset})
	{OtherDiag}):item	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistory12b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :item.TimeSince.TimePeriod,
NumberOfTimePeriods = :item.TimeSince.NumberOfTimePeriods}

Rule: PtHistoryA13
Priority: 100

(   
	({Person})
	({Lookup2})?
	({Lookup2.type == history}|{Lookup2.type == another}|{Lookup2.minorType == causality})
	({OtherDiag}):item
	({Person})?
  
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit = :match.OtherDiag.AgeUnit,
Age =:match.OtherDiag.Age,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper =:match.OtherDiag.AgeUpper}

/*covers OtherDiag with TimeSince but also the simple phrases: he has OtherDiag */
Rule: PtHistoryA13a  
Priority: 100

(   
	({!Person})
	({Person})
	({Lookup2.majorType == historic})
	({OtherDiag}):item
 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods,
AgeUnit = :match.OtherDiag.AgeUnit,
Age =:match.OtherDiag.Age,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper =:match.OtherDiag.AgeUpper}

/*As above but picks up specific type Otherdiag with built in 'onset time since'  as no separate onset phrase 
His seizures started 4 years ago*/
Rule: PtHistoryA13b  
Priority: 100

(   
	({Person})?
	({Lookup2.type != "diagnosed"})
	({Lookup2.minorType != "probability"})
	({OtherDiag.rule == OtherDiagTime}):item
 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}

Rule: PtHistoryA13c
Priority: 100

(   
	({DateSince})
	({PointInTime})?
	{Person}
   ({Lookup2.type == suffered})
	({Lookup2.type !=past})?
	({OtherDiag}):item
   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13c, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
PointInTime = :match.PointInTime.Since,
MonthDate = :match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}


Rule: PtHistoryA14
Priority: 98
(   
	{Person}
    {Lookup2.type == treated}
	({OtherDiag}):item
    {Person}
   	{DateSince}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA14, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
DayDate =:item.DateSince.DayDate,
MonthDate =:match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}

Rule: PtHistoryA14a  /* She had an injury due to seizure in  Date*/
Priority: 90
(   

    ({Lookup2.language == experience})
	({OtherDiag}):item
	({Lookup2})
    {Person}
	({Lookup2})
	({Person})?
	({OtherDiag})?
   	{DateSince}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA14a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
DayDate =:item.DateSince.DayDate,
MonthDate =:match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate}


Rule: PtHistoryA15
Priority: 98

(   
	{MedicalHistory}
	({OtherDiag.rule == OtherDiagPhrase}):item
	{DateSince}
	   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA15, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate =:match.DateSince.MonthDate,
YearDate = :match.DateSince.YearDate} 


Rule: PtHistoryA16
Priority: 100

(   
	({OtherDiag}):item
	{Person}
	({Lookup2.language == onset}|{Lookup2.language == experience})
	{TimeSince}
	  
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA16, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

/*sometimes Person doesn't get picked up by GATE ! "She had head injury at the age of 5 years"  */

Rule: PtHistoryA17  
Priority: 100
(   
	
	({Person})
	({Lookup2.type == past, Lookup2.majorType == historic}|{Lookup2.type == experiencing, Lookup2.minorType == symptoms}|{Lookup2.minorType == causality})
	({OtherDiag }):item
	({Lookup2})?

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA17, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit =:match.OtherDiag.AgeUnit,
Age =:match.OtherDiag.Age,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper =:match.OtherDiag.AgeUpper}

Rule: PtHistoryA18 
Priority: 100
(   
	({Lookup2.type == experiencing})
	({Lookup2})?
	({OtherDiag}):item
	({Person})
	({Lookup2.minorType == symptoms})?

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA18, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, 
AgeUnit =:match.OtherDiag.AgeUnit,
Age =:match.OtherDiag.Age,
AgeLower = :match.OtherDiag.AgeLower,
AgeUpper =:match.OtherDiag.AgeUpper}



Rule: PtHistoryA19 
Priority: 98

(  
	({!Person})
	({Person})
	({Lookup2})?
	({Age})
	({Lookup2.language == experience, Lookup2.type != "diagnosed"}|{Lookup2.minorType == causality})
	({Lookup2.type != previous})?
	({OtherDiag}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA19, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.OtherDiag.TimePeriod,
NumberOfTimePeriods = :match.OtherDiag.NumberOfTimePeriods,
AgeUnit =:match.Age.AgeUnit,
Age =:match.Age.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUppe}

Rule: PtHistoryA20 //with an onset - We are investigating P for possible ...//
Priority: 99

( 

	({Lookup2.type == considering}|{Lookup2.minorType == opinion})
	({Person})?
	{Lookup2.minorType == probability}
	({Lookup2})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA20, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

Rule: PtHistoryA20a //Opinion and otherdiag after some lookups ...//
Priority: 99

( 
	
	({Lookup2.minorType == opinion})
	({Person})
	({Lookup2})*
	({Person})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA20a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty} 

Rule: PtHistoryA21 //with an opinion//
Priority: 80

( 
	
	({!listPoint})
	({!OtherDiag})
	({Person})
	({Lookup2.minorType == symptoms, Lookup2.language == experience, Lookup2.type != diagnosed})
	({Lookup2.minorType == causality})?
	({Person})?
	({OtherDiag}):item
    ({Person})?
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA21, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}



Rule: PtHistoryA22 //with an opinion and possible birth history in Lookup3//
Priority: 99

( 
	({!DiagnosisTriggers})
	({Lookup2.minorType == opinion})
	({Lookup2})?
	({Person})?
	({Lookup2.majorType == historic}|{Lookup2.majorType == status}|{Lookup2.minorType == causality})
	({Lookup3})?
	({Lookup2})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA22, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
imePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}



Rule: PtHistoryA23  /**/
Priority: 80

(  
 	({Person})
	({Pronouns.type == relative})?
	({Lookup2})?
	({Lookup2.language == onset}|{Lookup2.minorType == opinion})
	({Lookup2})?
	({OtherDiag}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA23, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
MonthDate =:match.OtherDiag.MonthDate,
YearDate = :match.OtherDiag.YearDate}


Rule: PtHistoryA24  /*It is to be a short rule so !Lookup2 stops it from picking up OtherDiag in more complex sentences*/
Priority: 70

(  
	({Person.type == subject})
 	({Lookup2.majorType == historic, Lookup2.type != diagnosed}|{Lookup2.majorType == modifier})
	 ({Lookup2.type != diagnosed})?
	 ({Lookup2.type != state})
	 ({Lookup2})?
	 ({Person})?
	({OtherDiag.rule == OtherDiagPhrase}):item
	({!Lookup2})
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA24, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}  

Rule: PtHistoryA24b  /*simple and dengerous : Opinion (possible) learning difficulties*/
Priority: 80

(  
 	({Lookup2.minorType == opinion})
	 ({Person})?
	 ({Lookup2.minorType == probability})
	({OtherDiag.rule == OtherDiagPhrase}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA24b, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

Rule: PtHistoryA24c  /*her last seizure / his treatment for- for example*/
Priority: 70

(  
	
	({Person.type == possessive})
	({Lookup2})?
	({Lookup2})?
	({OtherDiag.rule == OtherDiagPhrase}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA24c, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}


Rule: PtHistoryA25  /*referring this person for...*/
Priority: 70

(  
	({Lookup2.type == considering})
	({Pronouns})?
	({Person})
	({Lookup2})?
	({OtherDiag.rule == OtherDiagPhrase}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA25, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}


Rule: PtHistoryA26  /*He has had depression  /  possible seizure*/
Priority: 40

(
	({!Person})
	({Person})
 	({Lookup2.majorType == historic})
	({Lookup2})?
	({Lookup2})?
	({OtherDiag.rule == OtherDiagPhrase}):item
	({!NewLine})
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA26, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}  

