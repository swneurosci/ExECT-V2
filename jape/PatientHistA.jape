Phase: PatientHistA
Input: Lookup3 Lookup2 Person Numeric Sentence timeElapsed timePeriod DiagnosisTriggers PointInTime Age YearToMonths PartialDate Number

/* These rules annotate events in patient history - type of event with an UMLS CUI, age (precise and as a range), 
date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods) */


Options: control=appelt


Rule: PtHistoryA1
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Numeric}
	{timeElapsed.time == in}
	{Person}
	{Lookup2.minorType == time}
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value,
MonthDate = "",
Age = "",
AgeUnit = :match.Lookup2.timeUnit,
AgeLower =:match.Lookup2.lowerAge,
AgeUpper =:match.Lookup2.upperAge}



Rule: PtHistoryA1a
Priority: 100

(   
	{Person}
    (({Lookup2.type == has})|({Lookup2.type == past}))
    {Lookup2.language == onset}
	({timeElapsed})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA1a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: PtHistoryA2
Priority: 90

(   
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType != symptoms}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient, Lookup3.PREF !~ "[birth]"}):item
	({timeElapsed.time == in})?
	({timePeriod})?
	({Numeric})?
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value}

Rule: PtHistoryA2a
Priority: 90

(   
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({timeElapsed.time == in})
	({timePeriod})
	({Numeric})
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA2a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty , 
YearDate = :match.Numeric.value}


Rule: PtHistoryA3
Priority: 99

(   
	({Person})?
	({Lookup2.minorType ==  symptoms}|{Lookup2.majorType == historic})
	({Lookup2})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic, Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Age}
	{Numeric}
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
Age = :match.Numeric.value,
AgeUnit = "Year"}

Rule: PtHistoryA4
Priority: 99

(   
	{Person}
    {Lookup2.majorType == historic}
	{Numeric}
	{timePeriod}
	{Lookup2}
	({Lookup2})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value,
PointInTime = "" }


Rule: PtHistoryA5
Priority: 98

(   
	{DiagnosisTriggers.majorType == diagnosis}
	({Lookup2})*
	({Lookup3})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    {Numeric}
	{timePeriod}
	{timeElapsed}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA5, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}


Rule: PtHistoryA6   
Priority: 100

(  
	{Person}
	{Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{timeElapsed}
	{Person}
	{Lookup2.type == past}
	{Numeric}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA6, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = :match.Numeric.value,
AgeUnit = "Year"} 


Rule: PtHistoryA7
Priority: 90

(   
	{Person}
	{Lookup2.minorType == symptoms , Lookup2.language == onset}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({timeElapsed})
    ({Lookup2.minorType == date})
	({PointInTime})
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA7, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
MonthDate =:match.Lookup2.month,
PointInTime = :match.PointInTime.Since}


Rule: PtHistoryA8
Priority: 90

(   
	{Numeric}
	{timePeriod}
	({timeElapsed.time == since})?
	{Person}
	({Lookup2})?
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms , Lookup2.language == onset}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA8, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, YearDate = "",
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}


Rule: PtHistoryA9
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{timeElapsed}
	{Lookup2.minorType == time}
    

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA9, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty , 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = :match.Lookup2.timeUnit,
AgeLower = :match.Lookup2.lowerAge,
AgeUpper = :match.Lookup2.upperAge,
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""} 


 Rule: PtHistoryA10
Priority: 80

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Person.majorType != person}
    

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA10, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: PtHistoryA11
Priority: 90

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	({Numeric})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{YearToMonths}
	({Numeric.rule == Numerals}):a
    {timePeriod}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA11, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = :match.YearToMonths.timePeriod,
AgeLower = :match.YearToMonths.value,
AgeUpper = :a.Numeric.value}


Rule: PtHistoryA12
Priority: 100

(   

	{Numeric}
	{Person}
    {Lookup2.type == past}
    ({Lookup2})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA12, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = :match.Numeric.value}

Rule: PtHistoryA12b
Priority: 100

(   
	{Numeric}
	{Person}
    {Lookup2.type == past}
    ({Lookup2})?
	{Lookup3}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA12b, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = :match.Numeric.value}

Rule: PtHistoryA13a
Priority: 100

(   
	({Person})?
	({Lookup2})?
	({Lookup2.type == history})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Age.value == topAge }
	{Numeric}
	
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
AgeUnit = "Year",
AgeUpper =:match.Numeric.value}


Rule: PtHistoryA13
Priority: 100

(   
	{Person}
    {Lookup2.type == has}
    ({Lookup2.type == suffered})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({Lookup2.minorType == date})?
   	({PointInTime})?
 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
PointInTime = :match.PointInTime.Since,
MonthDate =:match.Lookup2.month}


Rule: PtHistoryA13a
Priority: 100

(   
	({PartialDate})?
	{PointInTime}
	{Person}
    {Lookup2.type == past}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA13a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
PointInTime = :match.PointInTime.Since,
MonthDate =:match.PartialDate.month}


Rule: PtHistoryA14
Priority: 98

(   
	{Person}
    {Lookup2.type == treated}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    {Person}
    {Lookup3}
    {timeElapsed}
   {PartialDate}


 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA14, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
MonthDate =:match.PartialDate.month,
YearDate =:match.PartialDate.year}


Rule: PtHistoryA15
Priority: 100

(   
	{Person}
	{Lookup2.type == past}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({Numeric}):a
	({Numeric})?
	{timePeriod}
	   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA15, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
AgeUnit =:match.timePeriod.time-unit,
Age =:a.Numeric.value}


Rule: PtHistoryA16
Priority: 100

(   
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Person}
	{Lookup2.language == onset}
	{timeElapsed}
	{Numeric}
	{timePeriod}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA16, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods = :match.Numeric.value}

Rule: PtHistoryA17
Priority: 100

(   
	({Person})?
	{Lookup2.type == past}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Age}
	{Number}
	{timePeriod}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA17, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
AgeUnit =:match.timePeriod.time-unit,
Age =:match.Number.value}

Rule: PtHistoryA18
Priority: 98

(   
	{DiagnosisTriggers.majorType == diagnosis}
	({Lookup2})*
	({Lookup3})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{timePeriod}
	{timeElapsed}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA18, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.timePeriod.frequency}

Rule: PtHistoryA19
Priority: 98

(   
	{Person}
	({Lookup2.language == onset})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Numeric}
	{timePeriod}
	{timeElapsed}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA19, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}