Phase: FebrileSeizures
Input: Lookup3 Person Experience Sentence  Age Pronouns 


Options: control=appelt


Rule: NoFebSeizures1
Priority: 100

(   
	
    ({Experience.type == sufferd})
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile",
	Lookup3.Experiencer == Patient}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures1, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI, 
Negation = :item.Lookup3.Negation, PREF = :item.Lookup3.PREF
}

Rule: NoFebSeizures2
Priority: 100

(   
	{Person}
    {Experience}
	({Lookup3})*
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures2, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation, PREF = :item.Lookup3.PREF, 
// STY = :item.Lookup3.STY
}


Rule: NoFebSeizures2a
Priority: 100

(   
	{Person}
    {Experience}
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile"}):item	

    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures2a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
Certainty = :item.Lookup3.Certainty, 
 Negation = :item.Lookup3.Negation
}


Rule: NoFebSeizures3
Priority: 100

(   
	{Person}
    {Experience}
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
		
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures3, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation , PREF = :item.Lookup3.PREF, Certainty = :item.Lookup3.Certainty
}

Rule: NoFebSeizures3a
Priority: 100
//this rule reverses the experiences from other to patient as for some reason - other following just after, it applied it to the patient//
(   
	({Person})?
    {Experience}
	({Lookup3})?
	({Lookup3})?
	({Age})?
	({Experience})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile"}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures3a, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation , PREF = :item.Lookup3.PREF,
Certainty = :item.Lookup3.Certainty
}


Rule: NoFebSeizures4
Priority: 100

//These 2 rules could be a bit sensitive//
(   
	{Experience}
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation, PREF = :item.Lookup3.PREF
}

Rule: NoFebSeizures4a
Priority: 100

(   
	{Experience.type == suffered}
	({Lookup3})?
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4a, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation, PREF = :item.Lookup3.PREF

}

Rule: NoFebSeizures4b
Priority: 100

(   
	{Experience.type == suffered}
	({Lookup3})
	({Lookup3})
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4b, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation , PREF = :item.Lookup3.PREF
}

Rule: NoFebSeizures4c
Priority: 100

(   
	{Experience.type == suffered}
	({Lookup3})
	({Lookup3})
	({Lookup3})
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4c, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation ,PREF = :item.Lookup3.PREF
}

Rule: FebSeizures5
    
Priority: 100

(   
	({Person})?
	{Experience.type == suffered}
	({Lookup3.Negation == Affirmed, Lookup3.minorType == OtherDisease, Lookup3.PREF =~ "[Ff]ebrile", Lookup3.Experiencer == Patient}):item
	({Age}):a
	({Age}):b
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures5, Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI,
 Negation = :item.Lookup3.Negation, PREF = :item.Lookup3.PREF,
EC = :item.Lookup3.EC,
// Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
//Certainty = :item.Lookup3.Certainty, CUI = :item.Lookup3.CUI
AgeLower =:a.Age.Age,
AgeUnit =:b.Age.AgeUnit,
AgeUpper =:b.Age.Age}


Rule: FebSeizures7
Priority: 100

(   
 	({Person})?
	{Experience}
	({Lookup3.Negation == Affirmed, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
	({Age})?
	
	
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures7, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC, 
// Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Negation = :item.Lookup3.Negation,
Certainty = :item.Lookup3.Certainty,
AgeLower =:match.Age.AgeLower,
Age =:match.Age.Age,
AgeUnit =:match.Age.AgeUnit,
AgeUpper =:match.Age.AgeUpper}

// same as 5 so probably not needed now
Rule: FebSeizures7a
Priority: 100

(   
 	{Person}
  	{Experience}
	({Lookup3.Negation == Affirmed, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
	({Age}):a
	({Age}):b
	
	
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures7a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
// Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Negation = :item.Lookup3.Negation,
Certainty = :item.Lookup3.Certainty,
AgeLower =:a.Age.Age,
AgeUnit =:b.Age.AgeUnit,
AgeUpper =:b.Age.Age}


Rule: FebSeizures8
Priority: 100

(   
    {Age}
 	({Pronouns})?
	({Lookup3.Negation == Affirmed, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures8, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
EC = :item.Lookup3.EC,
// Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
 Certainty = :item.Lookup3.Certainty, 
 Negation = :item.Lookup3.Negation,
AgeUnit = :match.Age.AgeUnit,
AgeUpper = :match.Age.AgeUpper,
Age = :match.Age.Age,
AgeLower = :match.Age.AgeLower}

Rule: FebSeizures9
Priority: 100

(   
   
	({Experience})
	({Lookup3.Negation == Affirmed, Lookup3.PREF =~ "[Ff]ebrile", 
	Lookup3.Experiencer == Patient}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures9, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
Negation = :item.Lookup3.Negation, EC = :item.Lookup3.EC,
// Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
 Certainty = :item.Lookup3.Certainty}
