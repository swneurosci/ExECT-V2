Phase: FebrileSeizures
Input: Lookup3 Lookup2 Person Sentence MedicalHistory Age Pronouns


Options: control=appelt


Rule: NoFebSeizures1
Priority: 100

(   
	
    ({Lookup2.majorType == historic , Lookup2.type == history}|{Lookup2.majorType == historic , Lookup2.type == suffered})
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile" , 
	Lookup3.Experiencer == Patient}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: NoFebSeizures2
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup2})*
	({Lookup3})*
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile" , 
	Lookup3.Experiencer == Patient}):item	
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: NoFebSeizures2a
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup3})?
	({Lookup2})*
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile" }):item	

    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures2a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = "Affirmed",
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: NoFebSeizures3
Priority: 100

(   
	{Person}
    {Lookup2.majorType == historic}
	({Lookup2})*
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile" , 
	Lookup3.Experiencer == Patient}):item
		
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: NoFebSeizures3a
Priority: 100
//this rule reverses the experiences from other to patient as for saome reason - other follewe just after, it applied it to the patient//
(   
	({Person})?
    {Lookup2.majorType == historic}
	({Lookup3})?
	({Lookup2})?
	({Age})?
	({MedicalHistory})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile"}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures3a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = "Patient", Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: NoFebSeizures4
Priority: 100

//These 2 rules could be a bit sensitive//
(   
	{MedicalHistory.minorType == past}
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: NoFebSeizures4a
Priority: 100

(   
	{Lookup2.type == suffered}
	({Lookup3})?
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4a, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: NoFebSeizures4b
Priority: 100

(   
	{Lookup2.type == suffered}
	({Lookup3})
	({Lookup3})
	({Lookup3.Negation == Negated, Lookup3.PREF =~ "febrile", 
	Lookup3.Experiencer == Patient}):item
	  
 ):match  
 -->
:item.PatientHistory = {rule = NoFebSeizures4b, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: FebSeizures5
Priority: 100

(   
	({Person})?
    {Lookup2.majorType == historic , Lookup2.type == past}
	({Lookup3.Negation == Affirmed, Lookup3.PREF =~ "febrile ", 
	Lookup3.Experiencer == Patient}):item
	({Age})?
		
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures5, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
AgeUnit =:match.Age.AgeUnit,
Age =:match.Age.Age,
AgeUnit =:match.Age.AgeUnit,
AgeUpper =:match.Age.AgeUpper}


Rule: FebSeizures7
Priority: 100

(   
 	{Person}
    {Lookup2.majorType == historic , Lookup2.type == past}
	({Lookup3.Negation == Affirmed, Lookup3.PREF  =~ "febrile", 
	Lookup3.Experiencer == Patient}):item
	({Age})?
	
	
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures7, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
AgeUnit =:match.Age.AgeUnit,
AgeUpper =:match.Age.AgeUpper}



Rule: FebSeizures8
Priority: 100

(   
    {Age}
	({Lookup2})?
 	({Pronouns})?
	({Lookup2})?
	({Lookup3.Negation == Affirmed, Lookup3.CUI == C0009952, 
	Lookup3.Experiencer == Patient}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = FebSeizures8, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
AgeUnit = :match.Age.AgeUnit,
AgeUpper = :match.Age.AgeUpper,
Age = :match.Age.Age,
AgeLower = :match.Age.AgeLower}