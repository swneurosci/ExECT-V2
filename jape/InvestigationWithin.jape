Imports: {import static gate.Utils.*; }

Phase: Investigations
Input: InvestigationsLookup Investigations
Options: control=all

Rule: InvestWithinInvest
Priority: 100
(   
    ({InvestigationsLookup.rule =~ "Lookup", InvestigationsLookup notWithin Investigations}):invest
):match
-->
:match.Investigations = { rule = :match.InvestigationsLookup.rule, EEG_Performed = :match.InvestigationsLookup.EEG_Performed, EEG_Type = :match.InvestigationsLookup.EEG_Type,
EEG_Results = :match.InvestigationsLookup.EEG_Results, CT_Performed = :match.InvestigationsLookup.CT_Performed, CT_Results = :match.InvestigationsLookup.CT_Results,
MRI_Performed = :match.InvestigationsLookup.MRI_Performed, MRI_Results = :match.InvestigationsLookup.MRI_Results, CUI = :match.InvestigationsLookup.CUI, Negation = :match.InvestigationsLookup.Negation}

Rule: InvestWithinInvest
Priority: 100
(   
    ({InvestigationsLookup.rule =~ "Lookup", InvestigationsLookup within Investigations}):invest
):match
-->
:match.InvestigationIgnore = { rule = :match.InvestigationsLookup.rule, EEG_Performed = :match.InvestigationsLookup.EEG_Performed, EEG_Type = :match.InvestigationsLookup.EEG_Type,
EEG_Results = :match.InvestigationsLookup.EEG_Results, CT_Performed = :match.InvestigationsLookup.CT_Performed, CT_Results = :match.InvestigationsLookup.CT_Results,
MRI_Performed = :match.InvestigationsLookup.MRI_Performed, MRI_Results = :match.InvestigationsLookup.MRI_Results, CUI = :match.InvestigationsLookup.CUI, Negation = :match.InvestigationsLookup.Negation}
