Phase: SeizureFrequency 
Input: SeizFrequency1 SeizFrequency2 NumberRange timePeriods Lookup3 Split SeizFreq Prescription0 SeizureFree Age PointInTime timeElapsed Coincide PartialDate NoSeizure LastSeizure SlangSeizures
Options: control=appelt 


/* SeizureFrequency time (months weeks etc.) */

// SeizFrequency1 - Number = TimePeriods
// SeizFrequency2 - Number = Seizures (LOOKUP3 MUST COME BEFORE THE NUMBER, OTHERWISE ITS EASY TO SPOT
 
/* 
* 3 seizures in the last month 
*/ 
 
Rule: hSeizureFreq1a 
Priority: 99 
( 
    ({NumberRange}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timePeriods}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure1a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.timePeriods.frequency, TimePeriod = :match.timePeriods.time-unit, 
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2} 

Rule: hSeizureFreq1aDuringDate 
Priority: 100 
( 
    ({timeElapsed.time == "During"})
    ({PartialDate})
    ({NumberRange}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timePeriods}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizureFreq1aDuringDate", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.timePeriods.frequency, TimePeriod = :match.timePeriods.time-unit, TimeSince_or_TimeOfEvent = "During",
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
DayDate = :match.PartialDate.day, MonthDate = :match.PartialDate.month, YearDate = :match.PartialDate.year} 


/* 
* SeizFreq = daily/weekly/monthly/per day/per week/per month/in a month/week/year = THIS IS A GAZETTEER FROM GATE I CREATED (MIGHT BE WORTH REMOVING THESE FROM OTHER FREQUENCY TRIGGERS)
* used for 4 seizure in the last month or 3 seizures per week or one seizure daily
*/ 
  
Rule: hSeizureFreq2a 
Priority: 100  
( 
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({SeizFreq}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure2a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation, 
NumberOfTimePeriods = :match.SeizFreq.NumberOfTimePeriods, TimePeriod = :match.SeizFreq.TimePeriod, NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2}  
 
/* 
* SeizFreq = daily/weekly/monthly/per day/per week/per month 
* seizures three times per day 
*/ 
 
Rule: hSeizureFreq2b 
Priority: 100  
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({NumberRange}) 
    ({SeizFreq}) 
):match
--> 
:match.SeizureFrequency11 = { rule = "hSeizure2b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation, 
NumberOfTimePeriods = :match.SeizFreq.NumberOfTimePeriods, TimePeriod = :match.SeizFreq.TimePeriod, 
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2} 
 
/* 
* SeizFreq = daily/weekly/monthly/per day/per week/per month/in a month/week/year
* used for a seizure per day this rule, when number of seizures is not defined
*/ 
 
Rule: hSeizureFreq2c
Priority: 100 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({SeizFreq}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure2c", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.SeizFreq.NumberOfTimePeriods, TimePeriod = :match.SeizFreq.TimePeriod, NumberOfSeizures = "1"} 
 

// SeizFrequency1 - Number = TimePeriods
// SeizFrequency2 - Number = Seizures (LOOKUP3 MUST COME BEFORE THE NUMBER, OTHERWISE ITS EASY TO SPOT
/* 
* Seizure in the last 3 months 
* also picks up =  seizures have really increased since then, particularly in the last 2 years 
* Look to block above with freqChange
*/ 
 
 
Rule: hSeizureFreq3a 
Priority: 100 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({SeizFrequency1}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure3a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods, UpperNumberOfTimePeriods = :match.SeizFrequency1.UpperNumberOfTimePeriods, 
LowerNumberOfTimePeriods = :match.SeizFrequency1.LowerNumberOfTimePeriods, TimePeriod = :match.SeizFrequency1.TimePeriod, 
NumberOfSeizures = "1"} 
 
/* Think this rule might be wrong, SeizFrequency1 should be for NumberOfTimePeriods not NumberOfSeizures - These rules are identical*/
 
Rule: hSeizureFreq3b 
Priority: 100 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({SeizFrequency1}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure3b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency1.TimePeriod, 
NumberOfSeizures = "1"} 


/* 
* 3 seizures every 4 weeks 
*/ 
 
Rule: hSeizureFreq3c 
Priority: 100 
( 
    ({NumberRange}):num1 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({SeizFrequency1}):num2 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure3c", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,  
NumberOfTimePeriods = :num2.SeizFrequency1.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency1.TimePeriod,  
NumberOfSeizures = :num1.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2} 

/* 
* episode between 10 and 40 times a day, but also wrongly picking up "nocturnal events over the past 2 months" 
*/ 
 
/*
* 13 simple partial seizures over the last 4 months
*/

Rule: hSeizure3d
Priority: 100 
( 
    ({NumberRange}):a 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed})
    ({SeizFrequency1}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizureFreq3d", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfSeizures = :a.NumberRange.value, LowerNumberOfSeizures  = :a.NumberRange.N1, UpperNumberOfSeizures  = :a.NumberRange.N2
 TimePeriod = :match.SeizFrequency1.TimePeriod, NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods,
LowerNumberOfTimePeriods = :match.SeizFrequency1.LowerNumberOfTimePeriods, UpperNumberOfTimePeriods = :match.SeizFrequency1.UpperNumberOfTimePeriods,
CAT = :match.Lookup3.CAT}

/* 
*  seizures may be once every two to three weeks - doesnt work as seizure here is hypothetical
*  generalised tonic clonic seizure once in 3 months
*/ 
 
Rule: hSeizureFreq3e 
Priority: 100 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({NumberRange}):num1 
    ({timeElapsed})?
    ({SeizFrequency1}):num2 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure3e", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,  
NumberOfTimePeriods = :num2.SeizFrequency1.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency1.TimePeriod,
LowerNumberOfTimePeriods = :match.SeizFrequency1.LowerNumberOfTimePeriods, UpperNumberOfTimePeriods = :match.SeizFrequency1.UpperNumberOfTimePeriods,
NumberOfSeizures = :num1.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2} 
 
/* Daily absence seizures*/

Rule: hSeizureFreq3f 
Priority: 100 
(
    ({SeizFrequency1@string == "daily"}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure3f", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency1.TimePeriod, 
NumberOfSeizures = "1"} 


/* SeizFrequency1 - Number = TimePeriods | SeizFrequency2 - Number = Seizures (LOOKUP3 MUST COME BEFORE THE NUMBER, OTHERWISE ITS EASY TO SPOT*/


/* Seizures every 3 weeks */

Rule: hSeizureFreq4a 
Priority: 100 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({SeizFrequency2}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure4a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.SeizFrequency2.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency2.TimePeriod,
 NumberOfSeizures = :match.SeizFrequency2.QuantityTotal, LowerNumberOfSeizures  = :match.SeizFrequency2.QuantityLowerRange, UpperNumberOfSeizures  = :match.SeizFrequency2.QuantityUpperRange} 


/* complex partial seizure. These happen most weeks and can be up to 3 times per day */ 
/* this rule straight into SeizureFrequency because, so far, cant handle blocks over two sentences*/


Rule: hSeizureFreq4b
Priority: 100 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({Split}) 
    ({timePeriods})?
    ({SeizFrequency2}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure4b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.SeizFrequency2.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency2.TimePeriod,
 NumberOfSeizures = :match.SeizFrequency2.QuantityTotal, LowerNumberOfSeizures  = :match.SeizFrequency2.QuantityLowerRange, UpperNumberOfSeizures  = :match.SeizFrequency2.QuantityUpperRange} 

/* seizures from sleep roughly 4-5 times per week */

Rule: hSeizureFreq4c
Priority: 100 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed})//"from"
    ({SeizFrequency2})
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizure4c", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.SeizFrequency2.NumberOfTimePeriods, TimePeriod = :match.SeizFrequency2.TimePeriod,
 NumberOfSeizures = :match.SeizFrequency2.QuantityTotal, LowerNumberOfSeizures  = :match.SeizFrequency2.QuantityLowerRange, UpperNumberOfSeizures  = :match.SeizFrequency2.QuantityUpperRange} 


/* 
* Since last clinic she has had four secondary gen seizures 
*/ 
 
Rule: hSeizureFreqPointInTime1 
Priority: 95 
( 
    (({PointInTime}) 
    ({NumberRange notWithin Measurement}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})):match 
    ({!timePeriods})
):match1 
--> 
:match.SeizureFrequency11 = { rule = hSeizureFreqPointInTime1, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since"} 
 
/* 
* 8 seizures since last clinic appointment 
*/ 
 
Rule: hSeizureFreqPointInTime2 
Priority: 95 
( 
    ({NumberRange}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed.time == "Since"})? // not all PointInTime have since at start but some do
    ({PointInTime}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizureFreqPointInTime2, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation, 
NumberOfSeizures = :match.NumberRange.value, PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since"}

/* GTCS. she has only had two during this year. */
 
Rule: hSeizureFreqPointInTime3b 
Priority: 95 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({Split})?
    ({NumberRange})
    ({timeElapsed.time == "During"}) 
    ({PointInTime}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizureFreqPointInTime3b, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation, 
NumberOfSeizures = :match.NumberRange.value, PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "During"}

/* GTCS. she has only had two since last clinic. */

Rule: hSeizureFreqPointInTime3 
Priority: 95 
( 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({Split})?
    ({NumberRange})
    ({timeElapsed.time != "During"}) 
    ({PointInTime}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizureFreqPointInTime3, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation, 
NumberOfSeizures = :match.NumberRange.value, PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since"}


// Since last clinic he is having 2 seizures a week
// During last year he had 1 seizure a month
Rule: hSeizureFreq1aPointInTime 
Priority: 100 
( 
    ({timeElapsed})
    ({PointInTime})
    ({NumberRange}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timePeriods}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizureFreq1aPointInTime", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.timePeriods.frequency, TimePeriod = :match.timePeriods.time-unit, TimeSince_or_TimeOfEvent = :match.timeElapsed.time,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
PointInTime = :match.PointInTime.Since} 

// Since Last clinic he has had 5 seizures
Rule: hSeizureFreq1bPointInTime 
Priority: 100 
( 
    ({timeElapsed})
    ({PointInTime})
    ({NumberRange}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = "hSeizureFreq1bPointInTime", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
TimeSince_or_TimeOfEvent = :match.timeElapsed.time, PointInTime = :match.PointInTime.Since,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2} 


/* 8 Seizures since DATE */

Rule: hSeizurePartialDate3b
Priority: 99 
( 
    ({PartialDate})? 
    (({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed.time == "Since"})
    ({PartialDate})):match 
):match1 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate3b, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

/* 8 Seizures during DATE */

Rule: hSeizurePartialDate3b1
Priority: 99 
( 
    ({PartialDate})? 
    (({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed.time == "During"})
    ({PartialDate})):match 
):match1 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate3b1, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "During" }

/* Since? [Date], [Person] had [NumberRange] [Lookup3] - further my letter of Nov 2009, J has had 6 to 7 seizures */
// No timeElapsed in example so rule actually doesn't pick this up....

Rule: hSeizurePartialDate1
Priority: 95 
( 
    ({timeElapsed.time == "Since"})
    ({PartialDate})
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate1, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

// Since DATE he has had 5 GTCS a week
Rule: hSeizurePartialDate1
Priority: 95 
( 
    ({timeElapsed.time == "Since"})
    ({PartialDate})
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timePeriods})
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate1a, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfTimePeriods = :match.timePeriods.frequency, TimePeriod = :match.timePeriods.time-unit,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

// During march she had 2-3 focal seizures

Rule: hSeizurePartialDate1c
Priority: 95 
( 
    ({timeElapsed.time == "During"})
    ({PartialDate})
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate1c, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "During"}

/*Since his last review in DATE he has had 7 to 8 GTCS*/

Rule: hSeizurePartialDate1b
Priority: 95 
( 
    ({timeElapsed.time == "Since"})
    ({timeElapsed.time == "Last"})
    ({timeElapsed.time == "During"})
    ({PartialDate})
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate1b, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

/* 'UNTIL' November 2016. I am happy to report that he had only a single seizure since then. */
//WHY IS THIS RULE NOT GOING TO SFREQ11 but STRAIGHT TO SFREQ?
// in the example above there is a until before which is a SFBlock so blocking at filter
// maybe needs a rule for this example - does sound like a common structure - CHECK HOW MANY TIMES COMES UP IN THE LETTERS
Rule: hSeizurePartialDate2
Priority: 95 
( 
    ({PartialDate})
    ({Split})?
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed.time == "Since"}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate2, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

/* DATE, 5 seizures since then. */

Rule: hSeizurePartialDate2b
Priority: 95 
( 
    ({PartialDate})
    ({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed.time == "Since"}) 
):match 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate2b, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

/* recent seizure in Date */

Rule: hSeizurePartialDate2c
Priority: 95 
(
    ({!timeElapsed.time  == "Last"})
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timeElapsed.time == "During"}) 
    ({PartialDate})):match
):match1 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate2c, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = "1", YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "During"}

// Seizures - two since Febuary 
Rule: hSeizurePartialDate4
Priority: 95 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({NumberRange})
    ({timeElapsed.time == "Since"}) 
    ({PartialDate})):match
):match1 
--> 
:match.SeizureFrequency11 = { rule = hSeizurePartialDate4, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}



// 5 seizure since he was 15 years old
Rule: hSeizureAge
Priority: 95 
(
    ({NumberRange notWithin Age})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "Since"})
    ({Age})
):match
-->
:match.SeizureFrequency11 = { rule = "hSeizureAge", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeLower = :match.Age.AgeLower, AgeUpper = :match.Age.AgeUpper}


// Last 4 months he has had 6 seizures 
Rule: hSeizureLastTimePeriods
Priority: 95 
(
    ({timeElapsed.time == "Last"})//last
    ({SeizFrequency1})// 4 months
    ({NumberRange})//6
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
):match
-->
:match.SeizureFrequency11 = { rule = "hSeizureLastTimePeriods", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods, TimePeriod =  :match.SeizFrequency1.TimePeriod}

// Doubled up seizure freq
// She did have a cluster of seizures in August 2020 where she had 6-9 seizures every week
Rule: hSeizureDoubledDuring
Priority: 95 
( 
    ((({NumberRange})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    (({timeElapsed.time == "During"})
    ({PartialDate}))):match
    (({NumberRange}) 
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}) 
    ({timePeriods})):match3):match2
):match1
-->
:match.SeizureFrequency11 = {rule = hSeizureDoubledDuringPart1, CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
NumberOfSeizures = :match.NumberRange.value, LowerNumberOfSeizures  = :match.NumberRange.N1, UpperNumberOfSeizures  = :match.NumberRange.N2,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "During" }
,
:match2.SeizureFrequency11 = { rule = "hSeizureDoubledDuringPart2", CUI = :match3.Lookup3.CUI, Certainty = :match3.Lookup3.Certainty, Negation = :match3.Lookup3.Negation,
NumberOfTimePeriods = :match3.timePeriods.frequency, TimePeriod = :match3.timePeriods.time-unit, TimeSince_or_TimeOfEvent = "During",
NumberOfSeizures = :match3.NumberRange.value, LowerNumberOfSeizures  = :match3.NumberRange.N1, UpperNumberOfSeizures  = :match3.NumberRange.N2,
DayDate = :match2.PartialDate.day, MonthDate = :match2.PartialDate.month, YearDate = :match2.PartialDate.year}


