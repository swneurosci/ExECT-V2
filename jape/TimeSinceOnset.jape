Phase: TimeSinceOnset
Input: Lookup3 Lookup Person Sentence Numeric timePeriod timeElapsed Lookup2 Split Age DiagnosisTriggers


Options: control=appelt		


Rule: TimeSinceOnset1
Priority: 100

(   
    {Person}
	{Lookup2.language  == onset , Lookup2.type == began}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.minorType == Disease}):item
	{Person}
	({Lookup2})?
	({timeElapsed})?
	{Numeric} 
    {timePeriod}
	{timeElapsed.time == since}

 ):match  
 -->

:item.Onset = {rule = TimeSinceOnset1 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}




Rule: TimeSinceOnset2
Priority: 99

(   
    {Person}
	{Lookup2.language == onset}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed, Lookup3.CAT == seizures}):item
	({Person})?
	({Lookup2})?
	{timeElapsed}
	{Numeric} 
    {timePeriod}
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset2 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}

Rule: TimeSinceOnset3
Priority: 99

(   
    {Person}
	({Lookup2.language == onset})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.Epilepsy == Yes}):item
	{timeElapsed}
	{Numeric} 
    {timePeriod}
	
	

 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset3 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}


Rule: TimeSinceOnset4
Priority: 99

(   
    {Person}
    {timeElapsed}
    ({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
    {Split}
    {Person}
    {Lookup2.minorType == symptoms}
	{timeElapsed}
	{Numeric}
    {timePeriod}
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset4, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods = :match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}

Rule: TimeSinceOnset5
Priority: 98

(   
	({timeElapsed.time == during})
	{Numeric}
	{timePeriod}
	{Person}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.CAT == seizures }):item
	
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset5, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}

Rule: TimeSinceOnset6
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
	{Lookup2}
	{Numeric}
	{timePeriod}
	{timeElapsed.majorType == context}
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset6, OnsetType = "time_since_episodes_started", 
PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, TUI = :match.Lookup.TUI,
STY = :match.Lookup.STY, 
Certainty = :match.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}

Rule: TimeSinceOnset7
Priority: 99

(   
	{timeElapsed.majorType == context}
	{timePeriod}
	{Person}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.CAT == seizures }):item
	{Lookup3}
	
	
):match  
 -->
:item.Onset = {rule = TimeSinceOnset7, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods ="1"
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}

 


Rule: TimeSinceOnset8
Priority: 98

(   
	
	{Lookup2.majorType == person}
	{timeElapsed.majorType == context}
	{Numeric}
	{timePeriod}
	{Lookup2.language == onset}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset8, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}


Rule: TimeSinceOnset9
Priority: 98

(   
	{Person}
	{Lookup2}
	{Lookup3}
	{Lookup2.minorType == symptoms}
	({Lookup.minorType == Disease, Lookup.majorType == umls}):item
    {timeElapsed.time == during}
    {Numeric}
    {timePeriod}
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset9, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}


Rule: TimeSinceOnset10
Priority: 100

(   
    {Person}
	(({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.CAT == seizures})|
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed, Lookup3.minorType == Disease})):item
	{timeElapsed.time == during}
	{Numeric} 
    {timePeriod}
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset10 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value
/*LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""*/}

	
    
