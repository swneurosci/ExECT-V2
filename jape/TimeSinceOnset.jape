Phase: TimeSinceOnset
Input: Lookup3 Lookup Person Sentence TimeSince Lookup2 Split DiagnosisTriggers listPoint PHistBlock Pronouns
 /*PHistBlock should stop the rules picking up frequency e.g. once in 3 month - in 3 months is TimeSince */

Options: control=appelt		


Rule: TimeSinceOnset1
Priority: 100

(   
    {Person}
	{Lookup2.language  == onset, Lookup2.type == began}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.minorType == Disease}):item
	{Person}
	({Lookup2})?
	{TimeSince}

 ):match  
 -->

:item.Onset = {rule = TimeSinceOnset1 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

 /* as in: She has had epilepsy for the last 12 years*/
Rule: TimeSinceOnset2
Priority: 99

(   
    {Person}
	{Lookup2.language == onset,Lookup2.type != diagnosed }
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.minorType == Disease}):item
	({Lookup2.type != another})?
	{TimeSince}
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset2 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

Rule: TimeSinceOnset3
Priority: 99

(   
    {Person}
	({Lookup2.type == historic})?
	({Lookup2.language == onset,Lookup2.type != diagnosed })
	({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
	{TimeSince}
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset3 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, 
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

Rule: TimeSinceOnset4
Priority: 99

(   
    {Person}
    ({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
    {Split}
    {Person}
    {Lookup2.minorType == symptoms,Lookup2.type != diagnosed }
	{TimeSince}
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset4, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

Rule: TimeSinceOnset5
Priority: 98

(   
	({TimeSince})
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.minorType == Disease  }):item
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset5, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

/*His epilepsy started 10 years ago*/
Rule: TimeSinceOnset6 
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
	{Lookup2.language  == onset , Lookup2.type == began}
	{TimeSince}
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset6, OnsetType = "time_since_episodes_started", 
PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, TUI = :match.Lookup.TUI,
STY = :match.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :match.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

Rule: TimeSinceOnset7
Priority: 99

(   
	{TimeSince}
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.minorType == Disease }):item
	{Lookup3}
		
):match  
 -->
:item.Onset = {rule = TimeSinceOnset7, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

 
Rule: TimeSinceOnset8
Priority: 98

(   
	{Lookup2.majorType == person}
	{TimeSince}
	{Lookup2.language == onset, Lookup2.type != diagnosed}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset8, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}


/*She(?) had Lookup3 (excluding seizure free - with CUI) as a child and for the last x years had Lookup (epilepsy or specific seizures)*/
Rule: TimeSinceOnset9
Priority: 98

(   
	({Person})?
	{Lookup2.majorType == historic, Lookup2.type != diagnosed }
	{Lookup3.CUI != C1299590}
	({Lookup2})?
	{TimeSince}
	({Lookup2.language == onset})
	({Lookup.minorType == Disease, Lookup.majorType == umls}):item
    		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset9, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

//Is this rule sefe ?//
Rule: TimeSinceOnset10
Priority: 100

(   
    {Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.minorType == Disease}):item
	{TimeSince}
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset10 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

/*Diagnosis 1. Epilepsy - 40 year history*/
Rule: TimeSinceOnset11
Priority: 100

(   
    {DiagnosisTriggers}
	{listPoint}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed}):item
	{TimeSince}
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset11 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, 
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}	
    
Rule: TimeSinceOnset12 //...who has been suffering from epilepsy for the last 5 years//
Priority: 100

(   {Pronouns.type == relative}
    {Lookup2} 
    {Lookup2.language == onset , Lookup2.minorType == symptoms , Lookup2.type == experiencing}
    ({Lookup.PREF != seizures, Lookup.majorType == umls , Lookup.Negation == Affirmed }):item
    {TimeSince}
			
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnset12, OnsetType = "time_since_episodes_started", 
PREF =:item.Lookup.PREF, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}


/* she was having focal seizures and developed GTCS for the last 5 years*/ 
Rule: TimeSinceOnset13
Priority: 100

(   
    {Person}
	{Lookup2}
    ({Lookup})?
	{Lookup2.language  == onset , Lookup2.type == began}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.minorType == Disease}):item
	{TimeSince}
	

 ):match  
 -->

:item.Onset = {rule = TimeSinceOnset13 , OnsetType = "time_since_episodes_started",
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}