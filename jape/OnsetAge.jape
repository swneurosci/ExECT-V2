Phase: OnsetAge
Input: Lookup3 Person Lookup Lookup2 Sentence Age TimeSince Pronouns Frequency Split DiagnosisTriggers
Options: control=appelt

/*TimeSince  and Pronouns are here to stop picking up phrases with TimeSince */
/*DiagnosisTrigger acts as a block*/

Rule: onsetAge1
Priority: 99

(   
	({Person})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms, Lookup2.language == onset}
	({Person.majorType == person})?
	({Lookup2.majorType == historic})?
	{Age}
		
 ):match  
 -->
:item.Onset = {rule = onsetAge1, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAge2
Priority: 9

(   
	{Person}
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient ,Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms, Lookup2.language == onset, Lookup2.type != diagnosed}
	{Age}
	
	
 ):match  
 -->
:item.Onset = {rule = onsetAge2, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
 
 /* will also get Diagnosis: probable X since age 10 - as Person is optional */
Rule: onsetAge3
Priority: 98

(   
	({Person})?
	({Lookup2.minorType == probability})
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms})?
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient ,Lookup.minorType == Disease}):item
	{Age}
	
	
 ):match  
 -->
:item.Onset = {rule = onsetAge3, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAge4
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed }):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	({Person})
	({Lookup2})?
	{Age}
		
	
 ):match  
 -->
:item.Onset = {rule = onsetAge4, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAge5
Priority: 99

(   
	{Person}
    {Lookup3.minorType == generic}
	{Lookup2.language == onset, Lookup2.type != diagnosed}
	{Age}
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}):item

):match  
 -->
:item.Onset = {rule = onsetAge5, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}


Rule: onsetAge6
Priority: 98

(  
	{Age}
	({Lookup2})?
	{Person}
	({Lookup2})?
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms, Lookup2.type != diagnosed}
	({Lookup.majorType == umls, Lookup.Negation == Affirmed,  Lookup.Experiencer == Patient, Lookup.minorType == Disease}):item
		
 ):match  
 -->
:item.Onset= {rule = onsetAge6, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

//His epilepsy started at the age of 10//
Rule: onsetAge7
Priority: 99

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient  ,Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms, Lookup2.type != diagnosed }
	({TimeSince})?
	{Age}	
	
 ):match  
 -->
:item.Onset = {rule = onsetAge7, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
 

/*Her seizures started at the age of 10 with GTCS - so we are picking up GTCS with onset Age 10 */
Rule: onsetAge8
Priority: 99

(   
	{Person}
    {Lookup3.minorType == generic}
	{Lookup2.language == onset, Lookup2.type != diagnosed }
	{Age}
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}):item

):match  
 -->
:item.Onset = {rule = onsetAge8, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

//he staretd having generic seizures at the age of and then had "proper" seizures at the age of
Rule: onsetAge8b
Priority: 99

(   
	{Person}
	({Lookup2.language == onset})
    {Lookup3.minorType == generic}
	{Age}
	{Lookup2.language == onset, Lookup2.type == began }
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}
	{Age}):item
):match  
 -->
:item.Onset = {rule = onsetAge8b, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
/*STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer*/
/* Certainty = :item.Lookup.Certainty*/
Age = :item.Age.Age,
AgeUnit = :item.Age.AgeUnit,
AgeLower = :item.Age.AgeLower,
AgeUpper = :item.Age.AgeUpper}


Rule: onsetAge9
Priority: 99

(   
	{Age}
	({Person})?
	({Lookup2.language == onset, Lookup2.type != diagnosed})
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}):item

):match  
 -->
:item.Onset = {rule = onsetAge9, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
//STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper}

/* ... had epilepsy since age x or onset of his epilepsy age x*/
Rule: onsetAge10
Priority: 99

(   
	({Person})?
	({Lookup2.language == onset, Lookup2.type != diagnosed}|{Lookup2.language == onset, Lookup2.type == began})
	({Person})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	({Lookup2})?
	({Lookup3})?
	{Age}
):match   
 -->
:item.Onset = {rule = onsetAge10, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

 /* ...add episodes age 13 eventually diagnosed as focal seizures - linking 
 seizures to odd episodes and the Age of onset*/
Rule: onsetAge11
Priority: 99

(   
	{Person}
    {Lookup2.language == onset, Lookup2.type != diagnosed }
    {Lookup3}
	{Age}
	{Lookup2.language == onset}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient }):item

):match  
 -->
:item.Onset = {rule = onsetAge11, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
//She has epilepsy since she was 10 years//
Rule: onsetAge12
Priority: 99

(   
	{Person}
    {Lookup2}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient }):item
    ({Person})?
	({Lookup2.type != diagnosed})?
	{Age}
	
):match  
 -->
:item.Onset = {rule = onsetAge12, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAge13 /*At around 15 months of age she had a GTCS...*  ? may pick up non-onset phrases */
Priority: 98

(  
	{Age}
	{Person}
	{Lookup2.majorType == historic, Lookup2.type == past}
	({Lookup.majorType == umls, Lookup.Negation == Affirmed,  Lookup.Experiencer == Patient, Lookup.minorType == Disease}):item
		
 ):match  
 -->
:item.Onset= {rule = onsetAge13, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAge14 /*At around 15 months of age she had a GTCS...*  ? may pick up non-onset phrases */
Priority: 98

(  
	
	({Person})?
	({Lookup2.type == historic})
	({Lookup.majorType == umls, Lookup.Negation == Affirmed,  Lookup.Experiencer == Patient, Lookup.minorType == Disease}):item
	{Lookup2.language == onset, Lookup2.type == began}
	{Age}
 ):match  
 -->
:item.Onset= {rule = onsetAge14, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
// STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
// Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper}

Rule: onsetAge15
Priority: 99

(   
	{Age}
	({Person})?
	({Lookup2.language == onset, Lookup2.type != diagnosed})
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}):item
	({Age}):a
):match  
 -->
:item.Onset = {rule = onsetAge15, OnsetType = "age_episodes_started", 
CUI = :item.Lookup.CUI,
PREF = :item.Lookup.PREF, TUI = :item.Lookup.TUI,
//STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :a.Age.Age,
AgeUnit = :a.Age.AgeUnit,
AgeLower = :a.Age.AgeLower,
AgeUpper = :a.Age.AgeUpper}