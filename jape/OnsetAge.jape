Phase: OnsetAge
Input: Lookup3 Person Lookup Lookup2 Sentence Numeric timePeriod Range timeElapsed Age age
Options: control=appelt


Rule: onsetAge1
Priority: 99

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	{Person.majorType == person}
	({Lookup2.majorType == historic})
	{Age}
		
 ):match  
 -->
:item.Onset = {rule = onsetAge1, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}

Rule: onsetAge2
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient ,Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	{Person.majorType == person}
	{Lookup2.majorType == historic}
	{Numeric}
			
 ):match  
 -->
:item.Onset = {rule = onsetAge2, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY,
Certainty = :item.Lookup.Certainty,
AgeUnit = "Year",
Age =:match.Numeric.value}

 Rule: onsetAge3
Priority: 98

(   
	{Person}
	({Lookup2})?
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	{Age}
	
 ):match  
 -->
:item.Onset= {rule = onsetAge3, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}
 

Rule: onsetAge4
Priority: 9

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient ,Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	{History.majorType == person}
	{Range}
	
	
 ):match  
 -->
:match.Onset = {rule = onsetAge4, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = "Year",
Age = :match.Range.value}
 
Rule: onsetAge5
Priority: 98

(   
	({Person})?
	({Lookup2.minorType == probability})
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms})?
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient ,Lookup.minorType == Disease}):item
	{Age}
	
	
 ):match  
 -->
:item.Onset = {rule = onsetAge5, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}

Rule: onsetAge6
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed }):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	({Person})
	({Lookup2})?
	{Numeric}
	{timePeriod}
		
	
 ):match  
 -->
:item.Onset = {rule = onsetAge6, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.timePeriod.time-unit,
Age =:match.Numeric.value}

Rule: onsetAge7
Priority: 98

(   
	{Person}
	{Lookup2.majorType == historic}
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed }):item
	({Lookup2.type == time})?
	{Age}
		
	
 ):match  
 -->
:item.Onset = {rule = onsetAge7, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.timePeriod.time-unit,
Age =:match.Numeric.value}

Rule: onsetAge8
Priority: 99

(   
	{Person}
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms}|{Lookup2.majorType == historic, Lookup2.type == has})
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	{Age}
		
 ):match  
 -->
:item.Onset = {rule = onsetAge8, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.timePeriod.time-unit,
Age =:match.Numeric.value}
 
Rule: onsetAge9
Priority: 99

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient  ,Lookup.minorType == Disease}):item
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	({timeElapsed})
	({Numeric})
	{History}
	({Numeric}):a	
	
 ):match  
 -->
:item.Onset = {rule = onsetAge9, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = "Year",
Age =:a.Numeric.value}
 

Rule: onsetAge10
Priority: 99

(   
	{Person}
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms}|{Lookup2.majorType == historic, Lookup2.type == has})
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	{timeElapsed}
	{Person}
	{Lookup2}
	{Age}

 ):match  
 -->
:item.Onset = {rule = onsetAge10, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}

Rule: onsetAge11
Priority: 99

(   
	{History.minorType == history}
	{Age}
	({Person})?
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms}|{Lookup2.majorType == historic, Lookup2.type == past})
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item

 ):match  
 -->
:item.Onset = {rule = onsetAge11, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit =:match.Age.AgeUnit,
Age =:match.Age.Age}