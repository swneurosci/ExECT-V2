Phase: Diagnosis
Input:  Lookup DiagnosisTriggers NewParagraph
Options: control=all

/* 
  * Use certain Lookup.STY with diagnosis annotations 
  * e.g. (Lookup.PREF == "Diagnosis")
  * also includes nested diagnosis i.e. multiple diagnosis in a phrase
  * not filtered for epilepsy specific at this stage
*/


Rule: getDiagnosisSeizures
(
    ({DiagnosisTriggers.majorType == "diagnosis"})
	(
	{Lookup.STY ==~ "[Dd]isease or [Ss]yndrome", Lookup.Plural == Yes, Lookup.Experiencer == Patient, Lookup.Negation == Affirmed}
	):item
):label
-->
:item.Diagnosis = { rule = "getDiagnosisSeizures", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty}

Rule: getDiagnosisEpilepsy
(
    ({DiagnosisTriggers.majorType == "diagnosis"})
	(
	{Lookup.STY ==~ "[Dd]isease or [Ss]yndrome", Lookup.Seizure == No, Lookup.Experiencer == Patient, Lookup.Negation == Affirmed}
	):item
):label
-->
:item.Diagnosis = { rule = "getDiagnosisEpilepsy", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty}


Rule: getDiagnosisEpilepsy2
(
	({DiagnosisTriggers})
	({Lookup.STY == "Disease or Syndrome"})
	(({Lookup.STY == "Disease or Syndrome", Lookup.Seizure == No, Lookup.Experiencer == Patient, Lookup.Negation == Affirmed})):item
):match1
-->
:item.Diagnosis = { rule = "getDiagnosisEpilepsy2", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty}


Rule: getDiagnosisSeizures2
(
	({DiagnosisTriggers})
	({Lookup.STY == "Disease or Syndrome"})
	(({Lookup.STY == "Disease or Syndrome", Lookup.Plural == Yes, Lookup.Experiencer == Patient, Lookup.Negation == Affirmed})):item
):match1
-->
:item.Diagnosis = { rule = "getDiagnosisSeizures2", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty}

