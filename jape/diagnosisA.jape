Phase: DiagnosisA
Input:  Lookup DiagnosisTriggers NewParagraph
Options: control=all

/* 
  * Use certain Lookup.STY with diagnosis annotations 
  * e.g. (Lookup.PREF == "Diagnosis")
  * also includes nested diagnosis i.e. multiple diagnosis in a phrase
  * not filtered for epilepsy specific at this stage
*/

/* STY now != 'Sign or Symptom' to match DiagFromSeizure, this will also now pick up post-traumatic seizures */

Rule: DiagDiagnosisTrigger1
(
    ({DiagnosisTriggers.majorType == "diagnosis"})
	(
	{Lookup.STY !=~ "[Ss]ign or [Ss]ymptom", Lookup.Experiencer == Patient, Lookup.DiagCategory != "test", Lookup.Negation == Affirmed, Lookup.Temporality != "hypothetical"}
	):item
):label
-->
:item.DiagnosisA = { rule = "DiagDiagnosisTrigger1", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty, DiagCategory = :item.Lookup.DiagCategory}


Rule: DiagDiagnosisTrigger2
(
	({DiagnosisTriggers})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	(({Lookup.STY !=~ "[Ss]ign or [Ss]ymptom", Lookup.Experiencer == Patient, Lookup.DiagCategory != "test", Lookup.Negation == Affirmed, Lookup.Temporality != "hypothetical"})):item
):match1
-->
:item.DiagnosisA = { rule = "DiagDiagnosisTrigger2", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty, DiagCategory = :item.Lookup.DiagCategory}


Rule: DiagDiagnosisTrigger3
(
	({DiagnosisTriggers})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	(({Lookup.STY !=~ "[Ss]ign or [Ss]ymptom", Lookup.Experiencer == Patient, Lookup.DiagCategory != "test", Lookup.Negation == Affirmed, Lookup.Temporality != "hypothetical"})):item
):match1
-->
:item.DiagnosisA = { rule = "DiagDiagnosisTrigger3", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty, DiagCategory = :item.Lookup.DiagCategory}


Rule: DiagDiagnosisTrigger4
(
	({DiagnosisTriggers})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	(({Lookup.STY !=~ "[Ss]ign or [Ss]ymptom", Lookup.Experiencer == Patient, Lookup.DiagCategory != "test", Lookup.Negation == Affirmed, Lookup.Temporality != "hypothetical"})):item
):match1
-->
:item.DiagnosisA = { rule = "DiagDiagnosisTrigger4", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty, DiagCategory = :item.Lookup.DiagCategory}


Rule: DiagDiagnosisTrigger5
(
	({DiagnosisTriggers})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	({Lookup.Experiencer == Patient, Lookup.majorType == umls})
	(({Lookup.STY !=~ "[Ss]ign or [Ss]ymptom", Lookup.Experiencer == Patient, Lookup.DiagCategory != "test", Lookup.Negation == Affirmed, Lookup.Temporality != "hypothetical"})):item
):match1
-->
:item.DiagnosisA = { rule = "DiagDiagnosisTrigger5", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty, DiagCategory = :item.Lookup.DiagCategory}

