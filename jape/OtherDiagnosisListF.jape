Phase: OtherDiagnosisListF
Input: OtherDiag DiagnosisTriggers Conj 

Options: control=brill

/*These are for list with "alternative" list points */

Rule: OtherDiagListF1
Priority: 100

(   
({DiagnosisTriggers.type == diagnosis}|{DiagnosisTriggers.type == suffers})
	{Conj.type == list}
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

Rule: OtherDiagListF2
Priority: 99

(   
	({DiagnosisTriggers.type == diagnosis}|{DiagnosisTriggers.type == suffers})
	{Conj.type == list}
	{OtherDiag}
	({Conj.type == list}|{Conj.type == with})
	({OtherDiag}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}


Rule: OtherDiagListF3
Priority: 98

(   
	({DiagnosisTriggers.type == diagnosis}|{DiagnosisTriggers.type == suffers})
	{Conj.type == list}
	{Conj.type == list}
	{OtherDiag}
	{Conj.type == list}
	({OtherDiag}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}


Rule: OtherDiagListF4
Priority: 97

(   
	({DiagnosisTriggers.type == diagnosis}|{DiagnosisTriggers.type == suffers})
	{Conj.type == list}
	{Conj.type == list}
	{OtherDiag}
	{Conj.type == list}
	{OtherDiag}
	{Conj.type == list}
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}


