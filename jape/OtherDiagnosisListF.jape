Phase: OtherDiagnosisListF
Input: Lookup3 DiagnosisTriggers Conj Sentence

Options: control=brill



Rule: OtherDiagListF1
Priority: 100

(   
	{DiagnosisTriggers.majorType == diagnosis}
	{Conj.type == list}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic, Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: OtherDiagListF2
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis}
	{Conj.type == list}
	{Lookup3}
	({Conj.type == list}|{Conj.type == with})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic, Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: OtherDiagListF3
Priority: 98

(   
	{DiagnosisTriggers.majorType == diagnosis}
	{Conj.type == list}
	{Conj.type == list}
	{Lookup3}
	{Conj.type == list}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

Rule: OtherDiagListF4
Priority: 97

(   
	{DiagnosisTriggers.majorType == diagnosis}
	{Conj.type == list}
	{Conj.type == list}
	{Lookup3}
	{Conj.type == list}
	{Lookup3}
	{Conj.type == list}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagListF4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}

