Phase: OnsetAgeA
Input: Lookup Person Lookup2 Numeric timePeriod Age Lookup3 age Pronouns Split
Options: control=appelt


Rule: onsetAgeA1
Priority: 99

(   
	{Person}
    {Lookup2.language == onset}
    {Lookup3}
	{Age}
	{Lookup2.language == onset}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient }):item

):match  
 -->
:item.Onset = {rule = onsetAgeA1, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}
	

Rule: onsetAgeA2
Priority: 99

(   
	
	{Person}
    {Lookup2.language == onset}
	{Lookup3}
	{Age}
	{Lookup2.type == time}
	({Person})?
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item

	
):match   
 -->
:item.Onset = {rule = onsetAgeA2, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}	

Rule: onsetAgeA3
Priority: 99

(   
	{Lookup2.language == onset}
	{Person}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	({Lookup3})?
	{Age}
):match   
 -->
:item.Onset = {rule = onsetAgeA3, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}	

Rule: onsetAgeA4
Priority: 99

(   
	{Person}
    {Lookup3.minorType == generic}
	{Lookup2.language == onset}
	{Age}
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}):item

):match  
 -->
:item.Onset = {rule = onsetAgeA4, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup3.Certainty,
AgeUnit = :match.Age.Unit,
Age =:match.Age.Age}

Rule: onsetAgeA5
Priority: 99

(   
	{Age}
	({Lookup2})?
	({Person})?
	({Lookup2})?
	({Lookup2.language == onset, Lookup2.type != diagnosed})
	({Lookup.majorType == umls ,Lookup.minorType == Disease, Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient}):item

):match  
 -->
:item.Onset = {rule = onsetAgeA5, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup3.Certainty,
AgeUnit = :match.Age.Unit,
Age =:match.Age.Age}

