Phase: OnsetAgeA
Input: Lookup Person Lookup2 Age Lookup3 Pronouns Split Sentence Conj
Options: control=appelt

/*Conj should help to stop age of person being captured as age of onset - as theu are often in one sentence*/


	
/*
Rule: onsetAgeA2
Priority: 99

(   
	
	{Person}
    {Lookup2.language == onset, Lookup2.type != diagnosed}
	{Lookup3}
	{Age}
	({Person})?
	({Lookup2})?
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item

	
):match   
 -->
:item.Onset = {rule = onsetAgeA2, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Age.AgeUnit,
Age =:match.Age.Age}	*/
 
	



/*
 Rule: onsetAgeA6
Priority: 98

(   
	{Person}
	({Lookup2})?
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms, Lookup2.type != diagnosed }
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,  Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	{Age}
	
 ):match  
 -->
:item.Onset= {rule = onsetAgeA6, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}*/

/*as a todler she begun to have absence seizures*/
