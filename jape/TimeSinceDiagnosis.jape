Phase: TimeSinceDiagnosis
Input: Lookup Person Sentence Numeric timePeriod timeElapsed Lookup2 Split DiagnosisTriggers

Options: control=appelt


Rule: TimeSinceDiagnosis1
Priority: 99

(   
    {Person}
	({Lookup2.language == onset})?
    {DiagnosisTriggers.majorType == diagnosis}
	{Lookup.majorType == umls , Lookup.Negation == Affirmed}
	{timeElapsed}
	{Numeric} 
    {timePeriod}
	
 ):match  
 -->
:match.WhenDiagnosed = {rule = TimeSinceDiagnosis1 , OnsetType = "time_since_diagnosis",
PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, TUI = :match.Lookup.TUI,
STY = :match.Lookup.STY, 
Certainty = :match.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}


Rule: TimeSinceDiagnosis2
Priority: 99

(   
    {Person}
	{Lookup2.majorType == historic}
    {DiagnosisTriggers.majorType == diagnosis}
	{Numeric}
	{timePeriod}
	{timeElapsed}
	({Lookup2.minorType == causality})?
	{Lookup.majorType == umls , Lookup.Negation == Affirmed}
	
	
 ):match  
 -->
:match.WhenDiagnosed = {rule = TimeSinceDiagnosis2 , OnsetType = "time_since_diagnosis",
PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, TUI = :match.Lookup.TUI,
STY = :match.Lookup.STY, 
Certainty = :match.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}


