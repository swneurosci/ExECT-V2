Phase: TimeSinceOnsetB
Input: Lookup3 Lookup Person  Numeric TimeSince timePeriod timeElapsed Lookup2 Split age Frequency Conj
//frequency is here to stop the phrases relating to frequency rather than an onset being annotated//

//some of these rules go over two sentences, linking generic episodes with epilepsy onset*/
Options: control=appelt		

Rule: TimeSinceOnsetB1
Priority: 100

(   
	{timeElapsed.majorType == context}
	{timePeriod}
	{Person}
	{Lookup3}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer  == Patient , Lookup.minorType == Disease  }):item
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB1, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods ="1"}

 /*...for Epilepsy. She has been having seizures for the last 3 years.
  - links seizure onset to epilepsy and time since onset */

Rule: TimeSinceOnsetB2
Priority: 100

(   
	({Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.Experiencer  == Patient, Lookup.minorType == Disease}):item
	{Split}
	{Person}
	{Lookup2.type == has}
	{Lookup3}
	{TimeSince}
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB2, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

Rule: TimeSinceOnsetB3
Priority: 100

(  
	{Person}
	{Lookup2.type == has}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.Experiencer  == Patient, Lookup.minorType == Disease , Lookup.Temporality != hypothetical}):item
	{TimeSince}
			
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB3, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

/* as in suffering with seizures for x years. At the onset she had only
Partial seizures - so time since seizure onset goes to partial seizures */

Rule: TimeSinceOnsetB4
Priority: 100

(  
	({Lookup2})?
	({Lookup3})?
	{TimeSince}
	{Split}
	({Lookup2})?
	{Lookup2.language == onset, Lookup2.type != diagnosed}
	{Person}
	{Lookup2}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer  == Patient ,  Lookup.minorType == Disease}):item
		
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB4, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

	
//When the time since onset is in a following sentence//
Rule: TimeSinceOnsetB5
Priority: 100

(   
    ({Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.Experiencer  == Patient, Lookup.minorType == Disease}):item
    {Split}
    {Lookup2.language == onset , Lookup2.minorType == symptoms ,  Lookup2.type == suffered}
	{TimeSince}
	
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB5, OnsetType = "time_since_episodes_started", 
PREF =:item.Lookup.PREF, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}

/*when the onset of epilepsy is folloesd by seixure tyoe, with time since in the middle*/

Rule: TimeSinceOnsetB6
Priority: 100

(   
    {Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.Experiencer  == Patient, Lookup.minorType == Disease}
    ({Lookup2.language == onset, Lookup2.minorType == symptoms, Lookup2.type == began})?
	{TimeSince}
	{Person}
	{Lookup2.language == experience, Lookup2.minorType == symptoms}
	({Lookup.majorType == umls, Lookup.minorType == Disease}):item
	
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB6, OnsetType = "time_since_episodes_started", 
PREF =:item.Lookup.PREF, CUI = :item.Lookup.CUI, Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
TimePeriod = :match.TimeSince.TimePeriod,
NumberOfTimePeriods = :match.TimeSince.NumberOfTimePeriods}