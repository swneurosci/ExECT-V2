Phase: TimeSinceOnsetB
Input: Lookup3 Lookup Person Sentence Numeric timePeriod timeElapsed Lookup2 Split Age 


Options: control=appelt		

Rule: TimeSinceOnsetB1
Priority: 100

(   
	{timeElapsed.majorType == context}
	{timePeriod}
	{Person}
	{Lookup3}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.Experiencer  == Patient ,  Lookup3.CAT == seizures}):item
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB1, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods ="1",
LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""}


Rule: TimeSinceOnsetB2
Priority: 100

(   
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed, Lookup3.Experiencer  == Patient, Lookup3.minorType == Disease}):item
	{Split}
	{Person}
	{Lookup2.type == has}
	{Lookup3}
	{timeElapsed.majorType == context}
	{Numeric}
	{timePeriod}
	
	
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB2, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods = :match.Numeric.value,
LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""}


Rule: TimeSinceOnsetB3
Priority: 100

(  
	{Person}
	{Lookup2.type == has }
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed, Lookup3.Experiencer  == Patient, Lookup3.minorType == Disease , Lookup3.Temporality != hypothetical}):item
	{timeElapsed.majorType == context}
	{Numeric}
	{timePeriod}
		
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB3, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods = :match.Numeric.value,
LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""}


Rule: TimeSinceOnsetB4
Priority: 100

(  
	{Person}
	{Lookup2}
	{Lookup3}
	({Lookup2})?
	{timeElapsed.majorType == context}
	{timePeriod}
	{Numeric}
	{timePeriod}
	{Lookup2.type == suffered}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.Experiencer  == Patient ,  Lookup3.minorType == Disease}):item
	
	
 ):match  
 -->
:item.Onset = {rule = TimeSinceOnsetB4, OnsetType = "time_since_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Number.value,
LowerNumberOfTimePeriods = "",
UpperNumberOfTimePeriods = ""}