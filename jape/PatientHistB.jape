Phase: PatientHistB
Input: Lookup3 Lookup2 Person Numeric Sentence timeElapsed timePeriod Range PartialDate PointInTime Age DateBio


/*additional rules to annotate items in patient history when they are stated one after another in longer sentences
keeping the  appelt mode. As in PatientHistory the rules annotate events as - type of event with an UMLS CUI, 
age (precise and as a range), date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods) */


Options: control=appelt

Rule: PtHistoryB1
Priority: 100

(  
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	{Lookup3}
	({Numeric})?
	({timeElapsed})?
	({Person})?
	({Lookup2})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value,
MonthDate = "",
Age = "",
AgeUnit =:match.Lookup2.timeUnit,
AgeLower =:match.Lookup2.lowerAge,
AgeUpper =:match.Lookup2.upperAge,
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""}

Rule: PtHistoryB2
Priority: 100

(   {Numeric}
	{timePeriod}
	{timeElapsed}
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	{Lookup3}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }	):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
TimePeriod =:match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}


Rule: PtHistoryB3   
Priority: 100

(  
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	{Numeric}
	({Lookup3.minorType == Disease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({Range})
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "Year",
AgeLower =:match.Range.N1,
AgeUpper =:match.Range.N2} 



Rule: PtHistoryB4
Priority: 100

(   
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Person}	
	{timeElapsed}
	{Lookup3}
	{timeElapsed}
	{Numeric}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value}




Rule: PtHistoryB6
Priority: 100

(   
	{Person}
	{Lookup2.type == suffered}
	{Lookup3}
	{timeElapsed}
	{PartialDate}
	{PointInTime}
	{Lookup2}
	({Lookup3.minorType == Disease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB6, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
MonthDate =:match.PartialDate.month,
PointInTime = :match.PointInTime.Since}

Rule: PtHistoryB7
Priority: 100

(   
	{Numeric}
	{Person}
    {Lookup2.type == past}
    ({Lookup2})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB7, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
YearDate = :match.Numeric.value}


Rule: PtHistoryB8
Priority: 80

(   
	{Person}
    {Lookup2.type == has}
    {Lookup2.type == suffered}
    {timeElapsed}
    {Lookup3}
    ({timeElapsed})
	({Numeric})*
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }	):item
   


 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB8, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty}


Rule: PtHistoryB9
Priority: 98

(   
	{Person}
    ({Lookup2.type == treated})?
    {Lookup3}
    {Person}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    {timeElapsed}
   {PartialDate}


 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB9, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
MonthDate =:match.PartialDate.month,
YearDate =:match.PartialDate.year}

Rule: PtHistoryB10
Priority: 100

(   
	{Person}
    {Lookup2.type == has}
    ({Lookup2})*
	{Lookup3}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({Lookup2.minorType == date})?
   	({PointInTime})?

 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB10, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
PointInTime = :match.PointInTime.Since,
MonthDate =:match.Lookup2.month}


Rule: PtHistoryB11
Priority: 98

(   
	
    ({Person})
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms}|{Lookup2.type == suffered})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	({Person})?
	{Age}
	{Range}
	
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB11, OnsetType = "age_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
AgeUnit = "Year",
AgeLower =:match.Range.N1,
AgeUpper = :match.Range.N2,
Age = ""}

Rule: PtHistoryB12
Priority: 98

(   
	{Person}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}):item
   	{Lookup2.type == suffered}
   {DateBio}


 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB12, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
DayDate =:match.DateBio.DayDate,
MonthDate =:match.DateBio.MonthDate,
YearDate =:match.DateBio.YearDate}

Rule: PtHistoryB13
Priority: 100

(   
	{PartialDate}
	{Person}
    {Lookup2.type == suffered}
	({timeElapsed})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB13, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
MonthDate = :match.PartialDate.month}

Rule: PtHistoryB12
Priority: 98

(   
	
    ({Person})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic, Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Lookup2.majorType == historic, Lookup2.type == began}
	{Age}
	({Numeric})?
	{Range}
	
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB12, OnsetType = "age_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
AgeUnit = "Year",
AgeLower =:match.Range.N1,
AgeUpper = :match.Range.N2,
Age = :match.Numeric.value}

Rule: PtHistoryB13
Priority: 98

(   
	{Person}
    ({Lookup2.type == experiencing})
	({timeElapsed})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic,Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
    ({timeElapsed})?
   ({PartialDate})?


 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB13, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty,
MonthDate =:match.PartialDate.month,
YearDate =:match.PartialDate.year}


Rule: PtHistoryB14
Priority: 98

(   
	
    ({Person})
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, Lookup3.Experiencer == Patient}|
	{Lookup3.majorType == umls, Lookup3.minorType == generic, Lookup3.Experiencer == Patient, Lookup3.Negation == Affirmed }):item
	{Lookup2.majorType == historic, Lookup2.type == began}
	{Age}
	({Numeric})
	
	
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB14, OnsetType = "age_episodes_started", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
Certainty = :item.Lookup3.Certainty,
AgeUnit = "Year",
Age = :match.Numeric.value}