Phase: PatientHistB
Input:   Lookup2 OtherDiag DateSince TimeSince Person Age Sentence PartialDate PointInTime Split DiagnosisTriggers listPoint


/*additional rules to annotate items in patient history when they are stated one after another in longer sentences
keeping the  appelt mode. As in PatientHistoryA the rules annotate events as - type of event with an UMLS CUI, 
age (precise and as a range), date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods) */
//DiagnosisTriggers used as a block

Options: control=appelt

/*2nd mention of OtherDiag in a sentence  where DateSince in at the very begining of the phrase*/
Rule: PtHistoryB1 
Priority: 100

(  

	({!Person.type == subject})
	({Person})
    ({Lookup2.majorType == historic,Lookup2.minorType == symptoms}|{Lookup2.majorType == historic})
	({Lookup2})?
	{OtherDiag}
	({Person})?
	({Lookup2})?
	({Lookup2})?
	({OtherDiag }):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
YearDate = :item.OtherDiag.YearDate}

/*2nd mention of otherDiag in a sentence, with TimeSince not that close to the concept*/
Rule: PtHistoryB2
Priority: 100

(   {TimeSince}
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	{OtherDiag}
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB2, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods =:match.TimeSince.value}


Rule: PtHistoryB3   /*2nd mention of other diag in one sentence*/
Priority: 100

(  
	{OtherDiag}
	{Person}
	{Lookup2.language == onset}
	({OtherDiag}):item
	 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB3, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY,
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,  Negation = :item.OtherDiag.Negation,
AgeUnit = :item.OtherDiag.Age,
Age = :item.OtherDiag.Age,
AgeLower =:item.OtherDiag.AgeLower,
AgeUpper =:item.OtherDiag.AgeUpper} 



Rule: PtHistoryB4  /*This is trying to assign new Age features to OtherDiag annotated in PatHistA - doesn't seem to work*/
Priority: 100

(   
	{Lookup2.majorType == historic, Lookup2.type == suffered}
	({OtherDiag}):item
	({Age})
	{Lookup2.type == another}
	({Age}):a
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY,
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,  Negation = :item.OtherDiag.Negation,
AgeUnit = :a.Age.Unit,
Age =:a.Age.Age,
AgeLower =:a.Age.AgeLower,
AgeUpper =:a.Age.AgeUpper}


Rule: PtHistoryB5
Priority: 100

(   
	{Person}
	{OtherDiag}
	({Lookup2})?
	({Age}):a
	({Person})?
	({Person})
	({Lookup2.type == suffered})
	({OtherDiag}):item
		   
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB5, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit = :a.Age.AgeUnit,
Age =:a.Age.Age,
AgeLower =:a.Age.AgeLower,
AgeUpper =:a.Age.AgeUpper}

Rule: PtHistoryB6
Priority: 100

(   
	({DateSince})
	{Person}
    {Lookup2.type == past}
    ({Lookup2})?
	{OtherDiag}
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB6, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
YearDate = :match.DateSince.YearDate}


Rule: PtHistoryB7  //2nd in a list od otherdiag//
Priority: 80

(   
	({Person})
    ({Lookup2.type == has})?
    {Lookup2.type == suffered}
    {OtherDiag}
	({OtherDiag}):item
   

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB7, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY,
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality,  
Negation = :item.OtherDiag.Negation,
Certainty = :item.OtherDiag.Certainty} 

Rule: PtHistoryB7a  /*2nd other diag within an opinion statement*/
Priority: 70

(  
	
 	({Lookup2.minorType == opinion})
	({OtherDiag})
	({OtherDiag.rule == OtherDiagPhrase}):item
	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB7a, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Negation = :item.OtherDiag.Negation,
Certainty = :item.OtherDiag.Certainty}




Rule: PtHistoryB8
Priority: 98

(   
	{Person}
	({Lookup2})?
    ({Lookup2.type == treated}|{Lookup2.type == experiencing})
    {OtherDiag}
    ({Person})?
	({Lookup2})?
	({OtherDiag}):item


 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB8, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
MonthDate = :match.OtherDiag.MonthDate,
YearDate = :match.OtherDiag.YearDater}

Rule: PtHistoryB9
Priority: 100

(   
	{Person}
    {Lookup2.type == has}
    ({Lookup2})*
	{OtherDiag}
	({OtherDiag}):item
	({Lookup2.minorType == date})?
   	({PointInTime})?

 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB9, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = Recent, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
PointInTime = :match.PointInTime.Since,
MonthDate =:match.Lookup2.month}
/*

Rule: PtHistoryB10
Priority: 98

(   
	
    ({Person})
	({Lookup2.majorType == historic, Lookup2.minorType == symptoms}|{Lookup2.type == suffered})
	({OtherDiag}):item
	({Person})?
	{Age}
	
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB10, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper = :match.Age.AgeUpper,
Age = :match.Age.Age} */

/* when date is written in a long format so DateBio has to be used, it also puts temporality to Recent*/
Rule: PtHistoryB11  
Priority: 98

(   
	{Person}
	({OtherDiag.rule == OtherDiagPhrase}):item
   	{Lookup2.type == suffered}
   	{DateSince}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB11, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = Recent, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
DayDate =:match.DateBio.DayDate,
MonthDate =:match.DateBio.MonthDate,
YearDate =:match.DateBio.YearDate}

Rule: PtHistoryB12
Priority: 100

(   
	
	{Person}
	({OtherDiag})
    {Lookup2.minorType == causality}
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB12, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality,
 Negation = :item.OtherDiag.Negation,
Certainty = :item.OtherDiag.Certainty}



Rule: PtHistoryB13  /* She had an injury due to seizure in  Date - this is to capture the 2nd mention i.e. seizure that is combined with a date*/
Priority: 50

(   
    ({Lookup2.language == onset})
	({OtherDiag})
	({Lookup2})
    {Person}
	({Lookup2})
	({OtherDiag}):item
   	

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB13, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY,
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
DayDate =:item.OtherDiag.DayDate,
MonthDate =:match.OtherDiag.MonthDate,
YearDate = :match.OtherDiag.YearDate}


Rule: PtHistoryB14 /*he had a seizure and probably another seizure*/
Priority: 100
(   
	({!Person})
	({Person})
	{Lookup2.majorType == historic}
	{OtherDiag }
	({Lookup2})?
	({OtherDiag }):item
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB14, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, Negation = :item.OtherDiag.Negation,
AgeUnit =:match.OtherDiag.AgeUnit,
Age =:match.OtherDiag.Age,
AgeUnit = :match.OtherDiag.AgeUnit,
AgeUpper =:match.OtherDiag.AgeUpper}


Rule: PtHistoryB15 //using list point to stop the rule picking up items within a list
Priority: 99

( 
	({!listPoint})
	({Lookup2.minorType != opinion, Lookup2.minorType != probability})
	({Age})?
	({Person})?
	({!listPoint})
	({Lookup2})+
	({Person})?
	({OtherDiag})
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB15, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, 
//Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,Negation = :item.OtherDiag.Negation,
AgeUnit =:match.Age.AgeUnit,
Age =:match.Age.Age,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUppe}


/*Rule: PtHistoryB16  //this is A13a but it's not working there...?*, working here so dengarous!
Priority: 100

(   
	({Person})
	({Lookup2})
	({OtherDiag.rule == OtherDiagTime}):item
 
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB16, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :item.OtherDiag.TimePeriod,
NumberOfTimePeriods = :item.OtherDiag.NumberOfTimePeriods}*/