Phase: SeizureFrequency 
Input: SeizFrequency1 SeizFrequency2 NumberRange timePeriods Lookup3 Split SeizFreq Prescription0 SeizureFree Age PointInTime timeElapsed Coincide PartialDate NoSeizure LastSeizure SlangSeizures
Options: control=appelt 

/* Her last seizure was 6 years ago - THINK NEED TO ADD AGO INTO THIS RULE */

Rule: LastSeizure1
Priority: 100 
(
    ({timeElapsed.time  == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ((({NumberRange}) // number and time or "a year" with "a" incicating 1. 
    ({timePeriods}))|({timePeriods@string == "a year"})|({timePeriods@string == "a month"})|({timePeriods@string == "a week"})|({timePeriods@string == "a day"}))
    ({timeElapsed.time == "Since"})?
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure1", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = "1", NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, 
 UpperNumberOfTimePeriods  = :match.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since"}

/*  She has had five generalised tonic seizures, the last one approximately five years ago. - DOESNT WORK, NEED TO RETHINK THIS   */

Rule: LastSeizure2a
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time  == "Last"})
    ({NumberRange.value == 1})
    ({NumberRange}):num
    ({timePeriods})):match
):match1
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure2a", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation,
 NumberOfTimePeriods = :num.NumberRange.value, LowerNumberOfTimePeriods  = :num.NumberRange.N1, 
 UpperNumberOfTimePeriods  = :num.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since"}

// Seizure, last one March 2012 or Seizures, last event/episode DATE
//HUW
// Slang Seizures empty gaz so wont do anything atm - can add these phrase back to it - Now has episodes and events in it
Rule: LastSeizure2b
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time  == "Last"})
    (({NumberRange.value == 1})|({SlangSeizures}))
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num):match
):match1
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure2b", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //Check if this wants to be added
YearDate = :num.NumberRange.value, YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, 
DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

// seizures since then, last one being in DATE
Rule: LastSeizure2c
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time == "Since"})[0,1]
    ({timeElapsed.time  == "Last"})
    (({NumberRange.value == 1})|({SlangSeizures}))
    ({timeElapsed.time == "During"})[0,1]
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num):match
):match1
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure2c", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //Check if this wants to be added
YearDate = :num.NumberRange.value, YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, 
DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}


/* He reports his last seizure was in [DATE] */
//Changed this from during to since - So person has been seizure free since DATE (not that they were seizure free during DATE)
Rule: LastSeizure3
Priority: 95 
(
    ({timeElapsed.time  == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure3", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, 
 UpperNumberOfTimePeriods  = :match.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",YearDate = :num.NumberRange.value, 
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, 
 TimeSince_or_TimeOfEvent = "Since"}


/* the last seizure was on [DATE] */
//Changed this from during to since - So person has been seizure free since DATE (not that they were seizure free during DATE)
Rule: LastSeizure3b
Priority: 95 
(
    ({timeElapsed.time  == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time==During})*
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure3b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
 YearDate = :num.NumberRange.value, YearDate = :match.PartialDate.year, 
 MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since"}

// GTCS, last event around New Years Eve
Rule: LastSeizurePointInTimeA
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time  == "Last"})
    (({NumberRange.value == 1})|({SlangSeizures}))
    ({PointInTime})):match
):match1
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizurePointInTimeA", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //Check if this wants to be added
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day,
 PointInTime = :match.PointInTime.Since}

 // GTCS since then, last event around New Years Eve - match LastSeizure2c style
Rule: LastSeizurePointInTimeA
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time == "Since"})[0,1]
    ({timeElapsed.time  == "Last"})
    (({NumberRange.value == 1})|({SlangSeizures}))
    ({PointInTime})):match
):match1
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizurePointInTimeA", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //Check if this wants to be added
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day,
 PointInTime = :match.PointInTime.Since}
 
 

/* He reports his last seizure was in [DATE] */
//Changed this from during to since - So person has been seizure free since DATE (not that they were seizure free during DATE)
Rule: LastSeizurePointInTimeB
Priority: 95 
(
    ({timeElapsed.time  == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({PointInTime})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizurePointInTimeB", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since",
 PointInTime = :match.PointInTime.Since
 }


/* the last seizure was on [DATE] */
//Changed this from during to since - So person has been seizure free since DATE (not that they were seizure free during DATE)
Rule: LastSeizurePointInTimec
Priority: 95 
(
    ({timeElapsed.time  == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time==During})*
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizurePointInTimec", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
 YearDate = :num.NumberRange.value, YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month,
 DayDate = :match.PartialDate.day, TimeSince_or_TimeOfEvent = "Since",
 PointInTime = :match.PointInTime.Since}


 /* He reports his last seizure was in [YEAR] */
  // New rule for In/Since followed by number around 2000 to be a PartialDate now
//Changed this from during to since - So person has been seizure free since DATE (not that they were seizure free during DATE)
// The date here is now picked up as a PartialDate so will be picked up by LastSeizure3 (rule above)

// Rule: LastSeizure4
// Priority: 95 
// (
//     ({timeElapsed.time  == "Last"})
//     ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
//     ({timeElapsed.time == "During"})
//     ({NumberRange.value >= 1900})
// ):match
// -->
// :match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure4", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
//  TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
//  YearDate = :match.NumberRange.value, TimeSince_or_TimeOfEvent = "Since"}

 // GTCS since then, last event 5 years ago
Rule: LastSeizuretimePeriodA
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time  == "Last"})
    (({NumberRange.value == 1})|({SlangSeizures}))
    ({NumberRange}):num
    ({timePeriods})):match
):match1
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizuretimePeriodA", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //Check if this wants to be added
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day,
 PointInTime = :match.PointInTime.Since, NumberOfTimePeriods = :num.NumberRange.value, LowerNumberOfTimePeriods  = :num.NumberRange.N1, UpperNumberOfTimePeriods  = :num.NumberRange.N2}


 // GTCS since then, last event  5 years ago - match LastSeizure2c style + LastSeizurePointInTimeA
Rule: LastSeizuretimePeriodB
Priority: 100 
(
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({timeElapsed.time == "Since"})[0,1]
    ({timeElapsed.time  == "Last"})
    (({NumberRange.value == 1})|({SlangSeizures}))
    ({NumberRange}):num
    ({timePeriods})):match
):match1
-->
:match.SeizureFrequency11Test = { class = "Last", rule = "LastSeizuretimePeriodB", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //Check if this wants to be added
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day,
 PointInTime = :match.PointInTime.Since, NumberOfTimePeriods = :num.NumberRange.value, LowerNumberOfTimePeriods  = :num.NumberRange.N1, UpperNumberOfTimePeriods  = :num.NumberRange.N2}
/* GTCS, the most recent being 5 years ago */

 Rule: LastSeizure5
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({LastSeizure})
    ({NumberRange})
    ({timePeriods}):time
    ({timePeriods contains Token.string == "ago"})?
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure5", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :time.timePeriods.time-unit, NumberOfSeizures = "0",
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, 
 UpperNumberOfTimePeriods  = :match.NumberRange.N2,TimeSince_or_TimeOfEvent = "Since"}


/* Last Seizure was age X */

  Rule: LastSeizure6
Priority: 95 
(
    ({timeElapsed.time == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({Age})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure6", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", 
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2,
 Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower}

// Last seizure was in his teenage years
Rule: LastSeizure6b
Priority: 95 
(
    ({timeElapsed.time == "Last"})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({Age})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure6b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",// Since not during because non in that time
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2,
 Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower}


/* Most recent Seizure was age X */

  Rule: LastSeizure6
Priority: 95 
(
    ({LastSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({Age})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure6a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2,
 Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower}

/* Most recent Seizure was in his childhood */
// No seizures since Age basically so added "Since" to output
  Rule: LastSeizure6
Priority: 95 
(
    ({LastSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({Age})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizure6c", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2,
 Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower}


/* Most recent Seizure DATE */
// No seizures since Age basically so added "Since" to output
  Rule: LastSeizure6
Priority: 95 
(
    ({LastSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({PartialDate})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizurePartialDate", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2,
 Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower,
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}


 /* Most recent Seizure DATE */
// No seizures since 3 years ago
// last seizure 5 years ago
  Rule: LastSeizure6
Priority: 95 
(
    ({LastSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({NumberRange})
    ({timePeriods})
    ({timeElapsed.string == "ago"})
):match
-->
:match.SeizureFrequency11 = { class = "Last", rule = "LastSeizureTimeAgo", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, LowerNumberOfTimePeriods  = :match.NumberRange.N1, UpperNumberOfTimePeriods  = :match.NumberRange.N2,
 Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower,
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}


// complex partial seizures however has not had any of these for the last 2 years. (NEED TO GET THE HAS NOT HAD INTO THIS RULE)
// IT ALSO PICKS UP -  She had febrile "CONVULSIONS AS A CHILD, AND FOR THE LAST 10 YEARS" has had complex partial seizures. 
// CHILD = AGE BLOCK? - not picked up any more but child isn't in AGE????
Rule: NoSeizure1
Priority: 100 
(
    ({Lookup3})?
    (({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient}):lookup
    ({NoSeizure})
    ({timeElapsed.time  == "During"})
    ({NumberRange}):num
    ({timePeriods})):match
):match1
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure1", CUI = :lookup.Lookup3.CUI, Certainty = :lookup.Lookup3.Certainty, Negation = :lookup.Lookup3.Negation,
 NumberOfTimePeriods = :num.NumberRange.value, LowerNumberOfTimePeriods  = :num.NumberRange.N1, 
 UpperNumberOfTimePeriods  = :num.NumberRange.N2, 
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0"}


/*  he has not has a seizure for the last 3 weeks */

Rule: NoSeizure2
Priority: 95 
(
    ({NoSeizure})
    ({NumberRange.value == "1"})[0,1]// "a" is now a numberRange value = 1
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({NumberRange}):Num
    ({timePeriods})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure2", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = "Affirmed",
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
 NumberOfTimePeriods = :Num.NumberRange.value, UpperNumberOfTimePeriods = :Num.NumberRange.N2, 
 LowerNumberOfTimePeriods  = :Num.NumberRange.N1}

/* GTCS in total although not for a number of years */

Rule: NoSeizure3
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({timeElapsed.time == "Since"})
    ({NumberRange})
    ({timePeriods})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure3", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1}

// had a seizure 10 days ago = no seizure for 10 days
Rule: NoSeizure3a
Priority: 95 
(   
    ({NumberRange.value == 1})//a
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({NumberRange}):time//10
    ({timePeriods})//days
    ({timeElapsed.time == Since})//ago
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure3a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0",
 NumberOfTimePeriods = :time.NumberRange.value, UpperNumberOfTimePeriods = :time.NumberRange.N2, LowerNumberOfTimePeriods  = :time.NumberRange.N1}

/* she has not had any further seizures since starting Zonisamide. */
// Seizures here are affirmed not negated - but in the example they are negated... Picked up correctly by HseizureFree4d
// NEED TO CHECK IN MORE DETAIL
Rule: NoSeizure4
Priority: 95 
(
    ({NoSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "Since"})
    ({PointInTime})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure4", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1}
// hasn't had any seizures now for around three weeks
Rule: NoSeizure4b
Priority: 95 
(
    ({NoSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed}) // for
    ({SeizFrequency1})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure4b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since",
 UpperNumberOfTimePeriods = :match.NSeizFrequency1mberRange.UpperNumberOfTimePeriods, LowerNumberOfTimePeriods  = :match.SeizFrequency1.LowerNumberOfTimePeriods,
 NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods, TimePeriod =  :match.SeizFrequency1.TimePeriod}



 /* she has not had any further seizures during last year. */
/* DO WE WANT THIS STYLE OF RULE?
Rule: NoSeizure4a
Priority: 95 
(
    ({NoSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Affirmed, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({PointInTime})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure4a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "During",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1}
*/ 

 /* No seizures since last April */

Rule: NoSeizure5
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "Since"})
    ({timeElapsed.time == "Last"})
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure5", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
 YearDate = :num.NumberRange.value, YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}


/* No seizures during last April */
/* DO WE WANT THIS STYLE OF RULE?
Rule: NoSeizure5a
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({timeElapsed.time == "Last"})
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure5a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "During",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}
*/

 /* Since Date no further seizures */

Rule: NoSeizure5b
Priority: 95 
(   
    ({timeElapsed.time == "Since"})
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050})
    ({NoSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})

):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure5b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}


/*No seizure since April 2018 */
 Rule: NoSeizure6
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "Since"})
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050}):num
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure6", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
 YearDate = :num.NumberRange.value, YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}   

/*No seizure during April 2018 */
/* DO WE WANT THIS STYLE OF RULE?
Rule: NoSeizure6a
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
    ({PartialDate}|{NumberRange.value > 1950, NumberRange.value < 2050})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure6a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "During",
 NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
 YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day}   
*/


 /*No seizure since Age X */
 Rule: NoSeizure7
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "Since"})
    ({Age})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure7", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since", //DO WE WANT SINCE OR DURING FOR AGE
NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day,
Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower}   


 /*No seizure since early childhood */
 Rule: NoSeizure7a
Priority: 95 
(
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({Age contains Token.string ==~ "[Ss]ince"})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure7a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", TimeSince_or_TimeOfEvent = "Since",// DO WE WANT SINCE OR DURING FOR AGE
NumberOfTimePeriods = :match.NumberRange.value, UpperNumberOfTimePeriods = :match.NumberRange.N2, LowerNumberOfTimePeriods  = :match.NumberRange.N1,
YearDate = :match.PartialDate.year, MonthDate = :match.PartialDate.month, DayDate = :match.PartialDate.day,
Age = :match.Age.Age, AgeUnit = :match.Age.AgeUnit, AgeUpper = :match.Age.AgeUpper, AgeLower = :match.Age.AgeLower}   


/* PointInTime no seizures since */

Rule: NoSeizure8
Priority: 95 
(
    ({PointInTime})
    ({NumberRange within Measurement})?//For Started on Drug at dose of Xmg.....
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "Since"})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure8", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", 
 PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since"
}

// Since discharge no further seizures 
Rule: NoSeizure8b
Priority: 95 
(
    ({timeElapsed.time == "Since"})
    ({PointInTime})
    ({NoSeizure})
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure8b", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since,
  TimeSince_or_TimeOfEvent = "Since"
}



/* PointInTime no seizures during */
//Changed this from during to since - So person has been seizure free since PointInTime (not that they were seizure free during PointInTime)
//Rule Commented out, Would also need to decide if wanted to be Since or During?
/* DO WE WANT THIS STYLE OF RULE?
Rule: NoSeizure8a
Priority: 95 
(
    ({PointInTime})
    ({NumberRange within Measurement})?//For Started on Drug at dose of Xmg.....
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
    ({timeElapsed.time == "During"})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure8a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "Since"
}
*/


/* Since PointInTime no seizures */

Rule: NoSeizure9
Priority: 95 
(
    ({timeElapsed.time == "Since"})
    ({PointInTime})
    ({NumberRange within Measurement})?/*For Started on Drug at dose of Xmg.....*/
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure9", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since, 
 TimeSince_or_TimeOfEvent = "Since"
}

/* during PointInTime no seizures */
//Commented out again, Since or During needs to be decided.
/* DO WE WANT THIS STYLE OF RULE?
Rule: NoSeizure9a
Priority: 95 
(
    ({timeElapsed.time == "During"})
    ({PointInTime})
    ({NumberRange within Measurement})?//For Started on Drug at dose of Xmg.....
    ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality != "hypothetical", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
):match
-->
:match.SeizureFrequency11 = { class = "No", rule = "NoSeizure9a", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
 TimePeriod = :match.timePeriods.time-unit, NumberOfSeizures = "0", PointInTime = :match.PointInTime.Since, TimeSince_or_TimeOfEvent = "During"
}*/

// No seizure for 5 years
// Temporality Recent to try and not get stuff like 'He didnt have a seizure for a few years until....'
// Think may also need one for 'during the last.....' - two timeElapsed
// CHECK THIS RULE!!!
// It does work - however 100 letters picked once - incorrectly - would be 1/2 but another example has Experiencer = Other

// Rule: NoSeizure10
// Priority: 95 
// (
//     ({Lookup3.majorType == "umls", !Lookup3.CAT == "Slang", Lookup3.minorType != "OtherDisease", Lookup3.Temporality == "Recent", Lookup3.Negation == Negated, Lookup3.PREF != "seizure free", Lookup3.Experiencer == Patient})
//     ({timeElapsed.time == "During"})
//     ({SeizFrequency1})
// ):match    
// -->
// :match.SeizureFrequencyTEST = { class = "No", rule = "NoSeizure10", CUI = :match.Lookup3.CUI, Certainty = :match.Lookup3.Certainty, Negation = :match.Lookup3.Negation,
//  TimePeriod = :match.SeizFrequency1.TimePeriod, NumberOfSeizures = "0", NumberOfTimePeriods = :match.SeizFrequency1.NumberOfTimePeriods
// }