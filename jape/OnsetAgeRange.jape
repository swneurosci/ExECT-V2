Phase: Onset
Input: Lookup Person Lookup2 Sentence Age
Options: control=appelt


Rule: onsetAgeRange1
Priority: 98

(   
	{Person}
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed, Lookup.Experiencer == Patient , Lookup.minorType == Disease}):item
	{Person}
	({Age})

	
 ):match  
 -->
:item.Onset = {rule = onsetAgeRange1, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}


Rule: onsetAgeRange3
Priority: 98

(   

	{Person}
	{Lookup2.majorType == historic, Lookup2.minorType == symptoms}
	({Lookup.majorType == umls ,Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	{Person}
	({Age})

	
 ):match  
 -->
:item.Onset= {rule = onsetAgeRange3, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}




Rule: onsetAgeRange5
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed} ):item
	{Lookup2}
	{Person}
	({Age})
	
 ):match  
 -->
:item.Onset = {rule = onsetAgeRange5, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :match.Lookup.TUI,
STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAgeRange6
Priority: 98

(   
	{Person}
	({Lookup.majorType == umls ,Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item 
	{Lookup2}
	{Person}
	({Age})
	
 ):match  
 -->
:item.Onset = {rule = onsetAgeRange6, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}

Rule: onsetAgeRange7
Priority: 98

(   
	{Lookup2.majorType == historic}
	{Person}
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	{Person}
	({Age})
	
 ):match  
 -->
:item.Onset = {rule = onsetAgeRange7, OnsetType = "age_episodes_started", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY,  Negation = :item.Lookup.Negation, Experiencer = :item.Lookup.Experiencer,
Certainty = :item.Lookup.Certainty,
Age = :match.Age.Age,
AgeUnit = :match.Age.AgeUnit,
AgeLower = :match.Age.AgeLower,
AgeUpper =:match.Age.AgeUpper}
