Phase: OtherDiagnosis
Input:  DiagnosisTriggers Sentence OtherDiag listPoint Lookup2 Split Investigation

/* These are to capture OtherDiag when it is given in a sentence within the body of the letter, 1st in a sentence if there is more than one, 
listPoint should prevent these rules from capturing diagnosis within lists at top of letter*/

Options: control=appelt

Rule: OtherDiagnosis1  /*Top of letter has Diagnosistrigger == Diagnosis, for this inside sentences we use type == diagnosis*/
Priority: 100

(   

	{DiagnosisTriggers.type == diagnosis}
	({Lookup2.minorType != change})?
	({Lookup2})
	({OtherDiag}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis1,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation,
DayDate = :item.OtherDiag.DayDate,
MonthDate =:match.OtherDiag.MonthDate,
YearDate = :match.OtherDiag.YearDate}

Rule: OtherDiagnosis2
Priority: 100

(   
	({!Investigation})
	({Lookup2})?
	({Lookup2.minorType == probability})
	{DiagnosisTriggers.type == diagnosis}
	({Lookup2})
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis2,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation}

Rule: OtherDiagnosis3  /*when the top of letter diagnosis has no listpoints and just one item*/
Priority: 99

(   
	{!Lookup2}
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({Lookup2.minorType == probability})
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis3,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation}




// triggered by opinion only - could be too sensitive 

Rule: OtherDiagnosis5
Priority: 99

(  
 	{Lookup2.minorType == opinion, Lookup2.majorType == diagnosis}
	({Lookup2})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis5, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
//STY = :item.OtherDiag.STY, Experiencer = :item.OtherDiag.Experiencer, 
//Temporality = :item.OtherDiag.Temporality, 
Negation = :item.OtherDiag.Negation,
Certainty = :item.OtherDiag.Certainty}


Rule: OtherDiagnosis6  /*as in non-epileptic attacks would seem a most likely explanation*/
Priority: 90

(  
	({!Lookup2})
 	({OtherDiag}
	{Lookup2.minorType == opinion}
	{Lookup2.minorType == opinion}):item
	
	
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis6,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation}



Rule: OtherDiagnosis7 //with an opinion//
Priority: 100

(  
	({Lookup2.minorType == opinion})
	{DiagnosisTriggers}
	({OtherDiag.rule == OtherDiagPhrase}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis7,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation}

Rule: OtherDiagnosis8a //with a list of seizures
Priority: 100

(  
	{DiagnosisTriggers.type == diagnosis}
	({Lookup2})+
	({OtherDiag.rule == OtherDiagPhrase}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis8a,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation}


Rule: OtherDiagnosis8b //with a list of seizures
Priority: 100

(  
	{DiagnosisTriggers.type == diagnosis}
	({OtherDiag.rule == OtherDiagPhrase}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis8b,  PREF = :item.OtherDiag.PREF,
// STY = :item.OtherDiag.STY, 
// Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty, CUI = :item.OtherDiag.CUI, 
Negation = :item.OtherDiag.Negation}

/*Rule: PtHistoryA5
Priority: 98

(   
	({DiagnosisTriggers.type == Diagnosis})
	({Lookup2})*
	({OtherDiag}):item
    {TimeSince}

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.TimeSince.time-unit,
NumberOfTimePeriods =:match.TimeSince.value}*/

/*Rule: PtHistoryA21
Priority: 98

(   
	({DiagnosisTriggers.majorType == diagnosis})
	({Person})
	({Lookup2.type == suffered}|{Lookup2.type == has})
	({OtherDiag}):item

 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryA21, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty,
TimePeriod = :match.timePeriod.time-unit,
YearDate =:match.Numeric.value} */
