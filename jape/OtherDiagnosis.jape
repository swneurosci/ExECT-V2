Phase: OtherDiagnosis
Input:  DiagnosisTriggers Sentence  OtherDiag listPoint Lookup2 Context  TimeSince PHistBlock

/* These are to cupture OtherDiag when it is given in a sentence within the body of the letter, 1st in a sentence if ther is more than one, 
listPoint should prevent these rules from capturing diagnosis within lists at top of letter*/

Options: control=appelt

Rule: OtherDiagnosis1
Priority: 100

(   
	
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis }
	({OtherDiag}):item
	{Lookup2.type != past}
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

/*when diagnosis is a list without listPoints going over 2 lines with a split* !TimeSince is there to stop this rule from picking up items in PatientHistory with time period/
Rule: OtherDiagnosis2
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({Lookup2})?
	({Lookup2.minorType == probability})?
	({OtherDiag}):item
    {!TimeSince}
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis2, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}
*/
Rule: OtherDiagnosis3  /*when the top of letter diagnosis has no listpoints and just one item*/
Priority: 99

(   
	{!Lookup2}
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({Lookup2.minorType == probability})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis3, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

Rule: OtherDiagnosis4
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({OtherDiag})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

/*triggered by opinion only,   " the impression is thet the ongoing episodes are..."*/

/*Rule: OtherDiagnosis5
Priority: 99

(  
 	{Lookup2.minorType == opinion, Lookup2.majorType == diagnosis}
	{Lookup2.minorType == opinion, Lookup2.majorType == diagnosis}
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis5, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}*/


Rule: OtherDiagnosis6  /*as in non-epileptic attacks would seem a most likely explanation*/
Priority: 90

(  
	{!Lookup2}
 	({OtherDiag}):item
	({Lookup2.minorType == opinion , Lookup2.majorType == diagnosis})
	({Lookup2.minorType == opinion})?
	
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis6, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}



