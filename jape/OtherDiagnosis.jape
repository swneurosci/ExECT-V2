Phase: OtherDiagnosis
Input:  DiagnosisTriggers Sentence  OtherDiag listPoint Lookup2 Context Split



Options: control=appelt

Rule: OtherDiagnosis1
Priority: 100

(   
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis }
	({OtherDiag}):item
	{Lookup2.type != past}
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis1, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

/*when diagnosis is a list without listPoints going over 2 lines with a split*/
Rule: OtherDiagnosis2
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({Lookup2})?
	({Split})
	({Lookup2.minorType == probability})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis2, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

/*Rule: OtherDiagnosis3
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({Lookup2.minorType == probability})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis3, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty} */

Rule: OtherDiagnosis4
Priority: 99

(   
	{DiagnosisTriggers.majorType == diagnosis, DiagnosisTriggers.type == diagnosis}
	({OtherDiag})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis4, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}

/*triggered by the opinion statement */

/*Rule: OtherDiagnosis5
Priority: 99

(  
 	{Lookup2.minorType == opinion, Lookup2.Negation != Negated}
	({Lookup2})
	({Lookup2})?
	({OtherDiag}):item
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiagnosis5, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}


/*Rule: OtherDiag6
Priority: 90

(  
 	{DiagnosisTriggers}
	({Lookup2})?
	({Split})?
	({Lookup2.type != hypothetical})?
	({OtherDiag}):item
    
 ):match  
 -->
:item.PatientHistory = {rule = OtherDiag6, PREF = :item.OtherDiag.PREF, CUI = :item.OtherDiag.CUI, 
STY = :item.OtherDiag.STY, Negation = :item.OtherDiag.Negation,
Experiencer = :item.OtherDiag.Experiencer, Temporality = :item.OtherDiag.Temporality, 
Certainty = :item.OtherDiag.Certainty}*/



