Phase: OnsetDate
Input: Lookup3 Person Lookup2 Sentence Numeric timeElapsed  PointInTime Lookup PartialDate timePeriod
Options: control=appelt


Rule: OnsetDate1
Priority: 98

(   
	{Person}
	({Lookup2.majorType == historic})
	({Person})?
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed, Lookup3.CAT == seizures}):item
	{timeElapsed}
	{PartialDate}
	{PointInTime}
	
	
 ):match  
 -->
:item.Onset = {rule = OnsetDate1, OnsetType = "date_of_onset", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
DateYear = "",
DateMonth =:match.PartialDate.month,
DateDay = "",
PointInTime =:match.PointInTime.Since}

Rule: OnsetDate2
Priority: 98

(   
	{Person}
    ({Lookup2})?
	{Lookup2.majorType == historic, Lookup2.language == onset}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.CAT == seizures }):item
	{timeElapsed.time == during}
	{PartialDate}
	
	
 ):match  
 -->
:item.Onset= {rule = OnsetDate2, OnsetType = "date_of_onset", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
DateYear = :match.PartialDate.year,
DateMonth = "",
DateDay = "",
/*PointInTime = ""*/} 

Rule: OnsetDate3
Priority: 98

(   
	{Person}
	({Lookup2.majorType == historic , Lookup2.language == onset})
	({Person})?
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.minorType == Disease}):item
	{timeElapsed}
	{PartialDate}
	
	
 ):match  
 -->
:item.Onset = {rule = OnsetDate3, OnsetType = "date_of_onset", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
DateYear = :match.PartialDate.year,
DateMonth =:match.PartialDate.month,
DateDay = ""
/*PointInTime = ""*/}

Rule: onsetDate4
Priority: 98

(   
	{Person}
	({Numeric})?
	({Lookup2})?
	({Lookup2.majorType == historic})
	({Lookup.majorType == umls , Lookup.Experiencer == Patient , Lookup.Negation == Affirmed}):item
	({timeElapsed})?
	{PointInTime}
	
	
 ):match  
 -->
:item.Onset = {rule = OnsetDate4, OnsetType = "date_of_onset", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
/*DateYear = "",
DateMonth ="",
DateDay = "",*/
PointInTime =:match.PointInTime.Since }

Rule: onsetDate5
Priority: 98

(   
	{Lookup2.majorType == historic}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed  Lookup3.Experiencer == Patient , Lookup3.CAT == seizures }):item
	{Lookup2.language == onset }
	{timeElapsed}
	{PartialDate}
	
	
	
 ):match  
 -->
:item.Onset = {rule = OnsetDate5, OnsetType = "date_of_onset", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
DateYear = :match.PartialDate.year,
DateMonth ="",
DateDay = ""
/*PointInTime = ""*/}

Rule: onsetDate6
Priority: 98

(   
	{Lookup2.majorType == historic, Lookup2.language == onset}
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.Experiencer == Patient , Lookup3.CAT == seizures }):item
	({Lookup2.language == onset})?
	{timeElapsed.time == in}
	{Numeric}
	
	
	
 ):match  
 -->
:item.Onset = {rule = OnsetDate6, OnsetType = "date_of_onset", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
DateYear = :match.Numeric.value,
DateMonth ="",
DateDay = ""  
/*PointInTime = ""*/}


Rule: onsetDate7
Priority: 98

(   
	{Person}
	(({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.Experiencer == Patient ,Lookup3.CAT == seizures }) |
	({Lookup3.majorType == umls , Lookup3.Negation == Affirmed , Lookup3.Experiencer == Patient ,Lookup3.minorType == Disease }) ):item
	{Lookup2.language == onset}
	{timeElapsed.time == in}
	{Numeric}
	
	
	
 ):match  
 -->
:item.Onset = {rule = onsetDate7, OnsetType = "date_of_onset", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
DateYear = :match.Numeric.value,
DateMonth ="",
DateDay = ""
/*PointInTime = ""*/}


Rule: onsetDate8
Priority: 98

(   
	{Person}
	{Lookup2.majorType == historic , Lookup2.language == onset}
	({Lookup3.majorType == umls , Lookup3.Experiencer == Patient , Lookup3.Negation == Affirmed , Lookup3.minorType == Disease }):item
	{timeElapsed}
	{Numeric}
	{timePeriod}
	{timeElapsed.time == since}
	{Person}
	{PointInTime.minorType == since}
	
	
 ):match  
 -->
:item.Onset = {rule = OnsetDate8, OnsetType = "TimeFromPointInTime", 
PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, TUI = :item.Lookup3.TUI,
STY = :item.Lookup3.STY, 
PointInTime =:match.PointInTime.Since,
TimePeriod = :match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value}

