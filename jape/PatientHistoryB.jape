Phase: PatientHistoryB
Input: Lookup3 Lookup2 Person Numeric Sentence timeElapsed timePeriod Range 


/*additional rules to annotate items in patient history when they are stated one after another in longer sentences
keeping the  appelt mode. As in PatientHistory the rules annotate events as - type of event with an UMLS CUI, 
age (precise and as a range), date as year/month, and time since the event, as TimePeriod / NumberOfTimePeriods) */


Options: control=appelt

Rule: PtHistoryB1
Priority: 100

(  
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	{Lookup3}
	({Numeric})?
	({timeElapsed})?
	({Person})?
	({Lookup2})?
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB1, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value,
MonthDate = "",
Age = "",
AgeUnit =:match.Lookup2.timeUnit,
AgeLower =:match.Lookup2.lowerAge,
AgeUpper =:match.Lookup2.upperAge,
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""}

Rule: PtHistoryB2
Priority: 100

(   {Numeric}
	{timePeriod}
	{timeElapsed}
	{Person}
    {Lookup2.majorType == historic , Lookup2.minorType == symptoms}
	{Lookup3}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB2, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod =:match.timePeriod.time-unit,
NumberOfTimePeriods =:match.Numeric.value,
PointInTime = ""}


Rule: PtHistoryB3   
Priority: 100

(  
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == past}
	{Numeric}
	({Lookup3.minorType == Disease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	({Range})
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB3, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "Year",
AgeLower =:match.Range.N1,
AgeUpper =:match.Range.N2,
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""} 



Rule: PtHistoryB4
Priority: 100

(   
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	{Person}	
	{timeElapsed}
	{Lookup3}
	{timeElapsed}
	{Numeric}
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB4, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = :match.Numeric.value,
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower = "",
AgeUpper = "",
TimePeriod = "",
NumberOfTimePeriods ="",
PointInTime = ""}


Rule: PtHistoryB5   
Priority: 100

(  
	{Person}
	{Lookup2.majorType == historic , Lookup2.type == history}
	({Lookup3.minorType == OtherDisease, Lookup3.Negation == Affirmed, Lookup3.majorType == umls, 
	Lookup3.Experiencer == Patient}):item
	
	
    
 ):match  
 -->
:item.PatientHistory = {rule = PtHistoryB5, PREF = :item.Lookup3.PREF, CUI = :item.Lookup3.CUI, 
STY = :item.Lookup3.STY, Negation = :item.Lookup3.Negation,
Experiencer = :item.Lookup3.Experiencer, Temporality = :item.Lookup3.Temporality, 
Certainty = :item.Lookup3.Certainty, 
YearDate = "",
MonthDate = "",
Age = "",
AgeUnit = "",
AgeLower ="",
AgeUpper ="",
TimePeriod = "",
NumberOfTimePeriods = "",
PointInTime = ""} 



