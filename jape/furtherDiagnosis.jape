Phase: furtherDiagnosis
Input:  MedFinding listSent Lookup Person DiagnosisTriggers
Options: control=all



Rule: furtherDiagnosis1
 

(
	({MedFinding within listSent, MedFinding.STY!=~"[Ss]ign or [Ss]ymptom", MedFinding.Seizure == No})
):item
-->
:item.Diagnosis = {rule = "listDiagnosis1", PREF = :item.MedFinding.PREF, CUI = :item.MedFinding.CUI, STY = :item.MedFinding.STY, Negation = :item.MedFinding.Negation,
Experiencer = :item.MedFinding.Experiencer, Temporality = :item.MedFinding.Temporality, Certainty = :item.MedFinding.Certainty}

Rule: furtherDiagnosis2
 

(
	({MedFinding within listSent, MedFinding.STY!=~"[Ss]ign or [Ss]ymptom", MedFinding.Plural == Yes})
):item
-->
:item.Diagnosis = {rule = "listDiagnosis2", PREF = :item.MedFinding.PREF, CUI = :item.MedFinding.CUI, STY = :item.MedFinding.STY, Negation = :item.MedFinding.Negation,
Experiencer = :item.MedFinding.Experiencer, Temporality = :item.MedFinding.Temporality, Certainty = :item.MedFinding.Certainty}

 


Rule: withEpilepsy

(
	({Person.majorType == "person"} | {Person.ruleFinal == "PersonFinal"})
	({Lookup.STY ==~ "[Dd]isease or [Ss]yndrome", Lookup.Negation == "Affirmed"} |
	{Lookup.STY ==~ "[Ss]ign or [Ss]ymptom", Lookup.PREF != "Fit NOS"} | 
	{Lookup.STY ==~ "[Mm]ental or [Bb]ehavioral [Dd]ysfunction"} |
	{Lookup.STY ==~ "[Cc]ongenital [Aa]bnormality"}
	)*
	({Lookup.STY ==~ "[Dd]isease or [Ss]yndrome", Lookup.Negation == "Affirmed"} |
	{Lookup.STY ==~ "[Ss]ign or [Ss]ymptom", Lookup.PREF != "Fit NOS"} | 
	{Lookup.STY ==~ "[Mm]ental or [Bb]ehavioral [Dd]ysfunction"} |
	{Lookup.STY ==~ "[Cc]ongenital [Aa]bnormality"}
    ):diag
):item
-->
:item.DiagnosisOld = {rule = "withEpilepsy", PREF = :diag.Lookup.PREF  ,CUI = :diag.Lookup.inst, Negation = :diag.Lookup.Negation,
Experiencer = :diag.Lookup.Experiencer, Temporality = :diag.Lookup.Temporality,Certainty = :diag.Lookup.Certainty}



/*Rule: Refractory
*	
*
*(
*	{DiseaseSeverity.majorType == "treatment" ,DiseaseSeverity.minorType == "CUI" }
*	{Lookup.STY ==~ "[Dd]isease or [Ss]yndrome"}
*):item
*-->
*:item.DiagnosisRefractory = {rule = "Refractory", PREF = :item.Lookup.PREF  ,refractory = "C1096063", Negation = :item.Lookup.Negation,
*Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality,Certainty = :item.Lookup.Certainty}
*/



