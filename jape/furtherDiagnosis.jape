Phase: furtherDiagnosis
Input:  Person Lookup Split 
Options: control=appelt


/*
*This rule doesnt yet work, cant work out why, want it to pick up only stuff at top of letter, stuff in list after diagnosis:
*/
/*Rule: furtherDiagnosis1
 *
 */

/*(
*	({MedFinding within listSent, MedFinding.STY!=~"[Ss]ign or [Ss]ymptom", MedFinding.Seizure == No}):item
*):item1
*-->
*:item.Diagnosis = {rule = "listDiagnosis1", PREF = :item.MedFinding.PREF, CUI = :item.MedFinding.CUI, STY = :item.MedFinding.STY, Negation = :item.MedFinding.Negation,
*Experiencer = :item.MedFinding.Experiencer, Temporality = :item.MedFinding.Temporality, Certainty = :item.MedFinding.Certainty}
*
*Rule: furtherDiagnosis2
* 
*
*(
*	({Person})
*	({MedFinding within listSent, MedFinding.STY!=~"[Ss]ign or [Ss]ymptom", MedFinding.Plural == Yes, Lookup.Experiencer == Patient})
*):item
*-->
*:item.Diagnosis = {rule = "listDiagnosis2", PREF = :item.MedFinding.PREF, CUI = :item.MedFinding.CUI, STY = :item.MedFinding.STY, Negation = :item.MedFinding.Negation,
*Experiencer = :item.MedFinding.Experiencer, Temporality = :item.MedFinding.Temporality, Certainty = :item.MedFinding.Certainty}
*/

 Rule: furtherDiagnosis1
 

(
	({Person})
	({Lookup.STY!=~"[Ss]ign or [Ss]ymptom", Lookup.Seizure == No, Lookup.Experiencer == Patient, Lookup.Negation == Affirmed}):item
):item1
-->
:item.Diagnosis = {rule = "PersonDiagnosis1", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty}


/* This rule is basically DiagFromSeizure.jape
*
*
*
*Rule: furtherDiagnosis2
*
*
*(
*	({Person})
*	({Lookup.STY!=~"[Ss]ign or [Ss]ymptom", Lookup.Plural == Yes, Lookup.Negation == Affirmed})
*):item
*-->
*:item.Diagnosis = {rule = "PersonDiagnosis1", PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, STY = :item.Lookup.STY, Negation = :item.Lookup.Negation,
*Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality, Certainty = :item.Lookup.Certainty}
*
*/

Rule: withEpilepsy

(
	({Person.majorType == "person"} | {Person.ruleFinal == "PersonFinal"})
	({Lookup.STY ==~ "[Dd]isease or [Ss]yndrome", Lookup.Negation == "Affirmed"} |
	{Lookup.STY ==~ "[Ss]ign or [Ss]ymptom", Lookup.PREF != "Fit NOS"} | 
	{Lookup.STY ==~ "[Mm]ental or [Bb]ehavioral [Dd]ysfunction"} |
	{Lookup.STY ==~ "[Cc]ongenital [Aa]bnormality"}
	)*
	({Lookup.STY ==~ "[Dd]isease or [Ss]yndrome", Lookup.Negation == "Affirmed"} |
	{Lookup.STY ==~ "[Ss]ign or [Ss]ymptom", Lookup.PREF != "Fit NOS"} | 
	{Lookup.STY ==~ "[Mm]ental or [Bb]ehavioral [Dd]ysfunction"} |
	{Lookup.STY ==~ "[Cc]ongenital [Aa]bnormality"}
    ):diag
):item
-->
:item.DiagnosisOld = {rule = "withEpilepsy", PREF = :diag.Lookup.PREF  ,CUI = :diag.Lookup.inst, Negation = :diag.Lookup.Negation,
Experiencer = :diag.Lookup.Experiencer, Temporality = :diag.Lookup.Temporality,Certainty = :diag.Lookup.Certainty}



/*Rule: Refractory
*	
*
*(
*	{DiseaseSeverity.majorType == "treatment" ,DiseaseSeverity.minorType == "CUI" }
*	{Lookup.STY ==~ "[Dd]isease or [Ss]yndrome"}
*):item
*-->
*:item.DiagnosisRefractory = {rule = "Refractory", PREF = :item.Lookup.PREF  ,refractory = "C1096063", Negation = :item.Lookup.Negation,
*Experiencer = :item.Lookup.Experiencer, Temporality = :item.Lookup.Temporality,Certainty = :item.Lookup.Certainty}
*/



