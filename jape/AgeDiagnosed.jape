Phase: AgeDiagnosed
Input: Lookup Person Lookup2 Sentence Numeric timePeriod History DiagnosisTriggers


  /*includes AgeDiagnosedRange*/

Options: control=appelt


Rule: AgeDiagnosed1
Priority: 99

(   
	{Person}
    {Lookup2.majorType == historic}
    {DiagnosisTriggers}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed ,Lookup.Experiencer == Patient }):item
	({Person})?
	({Lookup2})?
	{Numeric}
	
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = AgeDiagnosed1, OnsetType = "Age_Diagnosed", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = "Year",
Age = :match.Numeric.value}



Rule: AgeDiagnosed2
Priority: 99

(   
	{Person}
    {Lookup2.majorType == historic}
    {Lookup2.majorType == historic, Lookup2.language == onset}
	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient }):item
	{Person}
	{Lookup2.minorType == time}
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = AgeDiagnosed2, OnsetType = "Age_Diagnosed", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit = :match.Lookup2.timeUnit,
AgeLower =:match.Lookup2.lowerAge,
AgeUpper = :match.Lookup2.upperAge,
Age = ""}


Rule: AgeDiagnosed3
Priority: 99

(   

	({Lookup.majorType == umls , Lookup.Negation == Affirmed , Lookup.Experiencer == Patient }):item
    {Lookup2.majorType == historic , Lookup2.type == diagnosed}
    {History.majorType == person}
	{Numeric}
	
 ):match  
 -->
:item.WhenDiagnosed = {rule = AgeDiagnosed3, OnsetType = "Age_Diagnosed", 
PREF = :item.Lookup.PREF, CUI = :item.Lookup.CUI, TUI = :item.Lookup.TUI,
STY = :item.Lookup.STY, 
Certainty = :item.Lookup.Certainty,
AgeUnit ="Year",
Age =  :match.Numeric.value}


