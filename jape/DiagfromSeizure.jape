Phase: DiagnosisfromSeziure
Input:  Person Sentence Lookup Investigation
Options: control=appelt

Rule: DiagnosisFromSeizure2a
Priority: 100
(

	(
	{Person}
	({Lookup.Experiencer == Patient, Lookup.majorType == umls, Lookup.singleSeizure!=true, Lookup.Negation == Affirmed, Lookup.Plural == Yes, Lookup.STY !=~ "[Ss]ign or [Ss]ymptom"}):match
	)

):match1
-->
:match.DiagnosisA = {rule = DiagFromSeizure2a, PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, Negation = :match.Lookup.Negation, Certainty = :match.Lookup.Certainty}


Rule: DiagnosisFromSeizure2b
Priority: 99
(

	(
	{Person}
	({Lookup.Experiencer == Patient, Lookup.majorType == umls, Lookup.Negation == Affirmed, Lookup.STY !=~ "[Ss]ign or [Ss]ymptom"})?
	({Lookup.Experiencer == Patient, Lookup.majorType == umls, Lookup.singleSeizure!=true, Lookup.Negation == Affirmed, Lookup.Plural == Yes, Lookup.STY !=~ "[Ss]ign or [Ss]ymptom"}):match
	)

):match1
-->
:match.DiagnosisA = {rule = DiagFromSeizure2b, PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, Negation = :match.Lookup.Negation, Certainty = :match.Lookup.Certainty}

Rule: DiagnosisFromEpilepsyYes2a
Priority: 100
(

	(
	{Person}
	({Lookup.Experiencer == Patient, Lookup.majorType == umls, Lookup.singleSeizure!=true, Lookup.Negation == Affirmed, Lookup.Epilepsy == Yes, Lookup.STY !=~ "[Ss]ign or [Ss]ymptom"}):match
	)

):match1
-->
:match.DiagnosisA = {rule = DiagFromEPIYES2a, PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, Negation = :match.Lookup.Negation, Certainty = :match.Lookup.Certainty}


Rule: DiagnosisFromEpilepsyYes2b
Priority: 99
(

	(
	{Person}
	({Lookup.Experiencer == Patient, Lookup.majorType == umls, Lookup.Negation == Affirmed, Lookup.STY !=~ "[Ss]ign or [Ss]ymptom"})?
	({Lookup.Experiencer == Patient, Lookup.majorType == umls, Lookup.singleSeizure!=true, Lookup.Negation == Affirmed, Lookup.Epilepsy == Yes, Lookup.STY !=~ "[Ss]ign or [Ss]ymptom"}):match
	)

):match1
-->
:match.DiagnosisA = {rule = DiagFromEPIYES2b, PREF = :match.Lookup.PREF, CUI = :match.Lookup.CUI, Negation = :match.Lookup.Negation, Certainty = :match.Lookup.Certainty}
